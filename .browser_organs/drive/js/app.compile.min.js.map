{"version":3,"sources":["../../app/app.js","../../app/app.config.js","../../app/app.route.js","../../app/directives/navbar.js","../../app/directives/jsTree.directive.js","../../app/directives/dnd-fileExplorer.js","../../app/directives/spinalInspect.js","../../app/services/spinalCore.js","../../app/services/spinalModelDictionary.js","../../app/services/spinalFilesystem.js","../../app/services/goldenLayoutService.js","../../app/services/authService.js","../../app/controllers/sideBarCtrl.js","../../app/controllers/mainCtrl.js","../../app/controllers/FileExplorerCtrl.js","../../app/controllers/navbarCtrl.js","../../app/controllers/InspectorCtrl.js","../../app/controllers/loginCtrl.js"],"names":[],"mappings":"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","file":"app.compile.min.js","sourcesContent":["angular.module('app.route', ['ngRoute']);\nangular.module('app.services', []);\nangular.module('app.directives', []);\nangular.module('app.controllers', []);\nangular.module('app.spinalcom', ['settings', 'ngMaterial']);\n\n\nangular.module('SpinalApp', ['ngAnimate', 'ngMaterial', 'app.directives', 'app.route',\n    'jsTree.directive', 'app.sidebar', 'app.FileExplorer',\n    'app.services', 'app.controllers', 'ngMdIcons', 'settings', 'app.spinalcom'\n  ])\n  .run(['$rootScope', '$location', 'authService', function ($rootScope, $location, authService) {\n    let user = authService.get_user();\n    $rootScope.$on('$routeChangeStart', function (event, next, current) {\n      if (next.$$route.authenticate) {\n        if (!authService.is_Connected()) {\n          authService.login(user.username, user.password)\n            .then(function () {},\n              function () {\n                $location.path('/login');\n              });\n        }\n      }\n    });\n  }])\n\n\n  .config([\"$mdThemingProvider\", function ($mdThemingProvider) {\n    $mdThemingProvider.theme('altTheme')\n      .primaryPalette('grey', {\n        'default': '200'\n      })\n      .accentPalette('grey', {\n        'default': '700'\n      })\n      .dark();\n    $mdThemingProvider.theme('default')\n      .dark();\n\n    $mdThemingProvider.setDefaultTheme('altTheme');\n    $mdThemingProvider.theme(\"error-toast\");\n    $mdThemingProvider.alwaysWatchTheme(true);\n  }]).run([\"$templateCache\", \"$http\", function ($templateCache, $http) {\n    let load_template = (uri, name) => {\n      $http.get(uri).then((response) => {\n        $templateCache.put(name, response.data);\n      }, (errorResponse) => {\n        console.log('Cannot load the file ' + uri);\n      });\n    };\n    let toload = [{\n      uri: 'app/templates/sideBar.html',\n      name: 'sideBar.html'\n    }, {\n      uri: 'app/templates/inspector.html',\n      name: 'inspector.html'\n    }, {\n      uri: 'app/templates/FileExplorer.html',\n      name: 'FileExplorer.html'\n    }];\n    for (var i = 0; i < toload.length; i++) {\n      load_template(toload[i].uri, toload[i].name);\n    }\n\n    // $templateCache.put('templateId.html', 'This is the content of the template');\n  }]);","angular.module('settings', [])\n  .constant('config', {\n    main_path: '/',\n    spinalhub_url: '127.0.0.1',\n    spinalhub_port: '8888',\n    spinalhub_user: '168',\n  });","angular.module('app.route')\n  .config([\"$routeProvider\", \"$locationProvider\",\n    function ($routeProvider, $locationProvider) {\n      $routeProvider\n        .when(\"/home\", {\n          templateUrl: \"app/templates/main.html\",\n          authenticate: true,\n          controller: 'mainCtrl'\n        })\n        .when(\"/login\", {\n          templateUrl: \"app/templates/login.html\",\n          authenticate: false,\n          controller: 'loginCtrl'\n        })\n\n        .otherwise({\n          redirectTo: '/home'\n        });\n    }\n  ]);","angular.module('app.directives')\n  .directive(\"navbar\", [\n    function () {\n      return {\n        restrict: 'E',\n        templateUrl: 'app/templates/navbar.html',\n        controller: 'navbarCtrl',\n      };\n    }\n  ])\n  .directive(\"menuGlayout\", ['goldenLayoutService', '$timeout',\n    function (goldenLayoutService, $timeout) {\n      return {\n        restrict: 'E',\n        scope: {\n          layoutInfo: '=info'\n        },\n        replace: true,\n        template: '<li ng-repeat=\\\"layout in layoutInfo\\\"  id=\\\"{{layout.id}}\\\"><a >{{layout.name}}</a></li>',\n        link: (scope, element, attrs) => {\n          goldenLayoutService.wait_ready().then(() => {\n            let create_callback = (goldenLayoutService, layout) => {\n              return () => {\n                goldenLayoutService.createChild(layout.cfg);\n              };\n            };\n            for (var i = 0; i < scope.layoutInfo.length; i++) {\n              let layout = scope.layoutInfo[i];\n              goldenLayoutService.createDragSource($(\"#\" + layout.id)[0], layout.cfg);\n              $(\"#\" + layout.id).click(create_callback(goldenLayoutService, layout));\n            }\n          });\n        }\n      };\n    }\n  ])\n  .directive('ngRightClick', ['$parse', function ($parse) {\n    return function (scope, element, attrs) {\n      var fn = $parse(attrs.ngRightClick);\n      element.bind('contextmenu', function (event) {\n        scope.$apply(function () {\n          event.preventDefault();\n          fn(scope, {\n            $event: event\n          });\n        });\n      });\n    };\n  }]);","/*\n * jstree.directive [http://www.jstree.com]\n * http://arvindr21.github.io/jsTree-Angular-Directive\n *\n * Copyright (c) 2014 Arvind Ravulavaru\n * Licensed under the MIT license.\n *\n * Modified by Laurent HA TAM DAN\n * Copyright 2015 SpinalCom - www.spinalcom.com\n *\n */\n\nvar ngJSTree = angular.module('jsTree.directive', []);\nngJSTree.directive('jsTree', ['$http', function ($http) {\n  var tree = {};\n  var treeDir = {\n    restrict: 'EA',\n    fetchResource: function (url, cb) {\n      return $http.get(url).then(function (data) {\n        if (cb) cb(data.data);\n      });\n    },\n\n    managePlugins: function (s, e, a, config) {\n      if (a.treePlugins) {\n        config.plugins = a.treePlugins.split(',');\n        config.core = config.core || {};\n        config.core.check_callback = config.core.check_callback || true;\n\n        if (config.plugins.indexOf('state') >= 0) {\n          config.state = config.state || {};\n          config.state.key = a.treeStateKey;\n        }\n\n        if (config.plugins.indexOf('search') >= 0) {\n          var to = false;\n          if (e.next().attr('class') !== 'ng-tree-search') {\n            e.after('<input type=\"text\" placeholder=\"Search Tree\" class=\"ng-tree-search\"/>')\n              .next()\n              .on('keyup', function (ev) {\n                if (to) {\n                  clearTimeout(to);\n                }\n                to = setTimeout(function () {\n                  tree.jstree(true).search(ev.target.value);\n                }, 250);\n              });\n          }\n        }\n\n        if (config.plugins.indexOf('checkbox') >= 0) {\n          config.checkbox = config.checkbox || {};\n          config.checkbox.keep_selected_style = false;\n        }\n\n        if (config.plugins.indexOf('contextmenu') >= 0) {\n          if (a.treeContextmenu) {\n            config.contextmenu = config.contextmenu || {\n              // 'select_node': false,\n            };\n            if (typeof a.disableselectContextmenu != 'undefined') {\n              config.contextmenu.select_node = false;\n            }\n            if (a.treeContextmenuaction != undefined) {\n              config.contextmenu.items = function (e) {\n                return s.$eval(a.treeContextmenuaction)(e);\n              };\n            } else {\n              config.contextmenu.items = function (node) {\n                if (typeof s[a.treeContextmenu] == 'function')\n                  return s[a.treeContextmenu](node);\n                return s[a.treeContextmenu];\n              };\n            }\n          }\n        }\n\n        if (config.plugins.indexOf('types') >= 0) {\n          if (a.treeTypes) {\n            config.types = s[a.treeTypes];\n            console.log(config);\n          }\n        }\n\n        if (config.plugins.indexOf('dnd') >= 0) {\n          if (a.treeDnd) {\n            config.dnd = s[a.treeDnd];\n            console.log(config);\n          }\n        }\n      }\n      return config;\n    },\n    manageEvents: function (s, e, a) {\n      if (a.treeEvents) {\n        var evMap = a.treeEvents.split(';');\n        for (var i = 0; i < evMap.length; i++) {\n          if (evMap[i].length > 0) {\n            // plugins could have events with suffixes other than '.jstree'\n            var evt = evMap[i].split(':')[0];\n            if (evt.indexOf('.') < 0) {\n              evt = evt + '.jstree';\n            }\n            var cb = evMap[i].split(':')[1];\n            tree.on(evt, s[cb]);\n          }\n        }\n      }\n    },\n    manageBinds: function (s, e, a) {\n      if (a.treeBinds) {\n        var evMap = a.treeBinds.split(';');\n        for (var i = 0; i < evMap.length; i++) {\n          if (evMap[i].length > 0) {\n            var evt = evMap[i].split(':')[0];\n            var cb = evMap[i].split(':')[1];\n            tree.on(evt, s[cb]);\n          }\n        }\n      }\n    },\n    link: function (s, e, a) { // scope, element, attribute \\O/\n      $(function () {\n        var config = {};\n\n        // users can define 'core'\n        config.core = {};\n        if (a.treeCore) {\n          config.core = $.extend(config.core, s[a.treeCore]);\n        }\n\n        // clean Case\n        a.treeData = a.treeData ? a.treeData.toLowerCase() : '';\n        a.treeSrc = a.treeSrc ? a.treeSrc.toLowerCase() : '';\n\n        if (a.treeData == 'html') {\n          treeDir.fetchResource(a.treeSrc, function (data) {\n            e.html(data);\n            treeDir.init(s, e, a, config);\n          });\n        } else if (a.treeData == 'json') {\n          treeDir.fetchResource(a.treeSrc, function (data) {\n            config.core.data = data;\n            treeDir.init(s, e, a, config);\n          });\n        } else if (a.treeData == 'scope') {\n          s.$watch(a.treeModel, function (n, o) {\n            if (n) {\n              config.core.data = s[a.treeModel];\n              $(e).jstree('destroy');\n              treeDir.init(s, e, a, config);\n            }\n          }, true);\n          // Trigger it initally\n          // Fix issue #13\n          config.core.data = s[a.treeModel];\n          treeDir.init(s, e, a, config);\n        } else if (a.treeAjax) {\n          config.core.data = {\n            'url': a.treeAjax,\n            'data': function (node) {\n              return {\n                'id': node.id != '#' ? node.id : 1\n              };\n            }\n          };\n          treeDir.init(s, e, a, config);\n        }\n      });\n\n    },\n    init: function (s, e, a, config) {\n      treeDir.managePlugins(s, e, a, config);\n      tree = $(e).jstree(config);\n      treeDir.manageEvents(s, e, a);\n      treeDir.manageBinds(s, e, a);\n    }\n  };\n\n  return treeDir;\n\n}]);","angular.module('app.directives')\n  .directive('dragDrop', function () {\n    return {\n      scope: {\n        fileObj: '=fileObj',\n        events: '=dragEvents'\n      },\n      link: function (scope, element) {\n        let events = [];\n        element.attr(\"draggable\", \"true\");\n        if (scope.events) {\n          let create_callback_event = (key, scope) => {\n            return (event) => {\n              return scope.events[key](event, scope.fileObj);\n            };\n          };\n\n          for (let key in scope.events) {\n            if (scope.events.hasOwnProperty(key)) {\n              let obj = {\n                fn: create_callback_event(key, scope),\n                key: key\n              };\n              events.push(obj);\n              element.on(key, obj.fn);\n            }\n          }\n          scope.$on('$destroy', () => {\n            for (var i = 0; i < events.length; i++) {\n              element.off(events[i].key, events[i].fn);\n            }\n          });\n        }\n\n      }\n\n    };\n  })\n  .directive('folderDrop', function () {\n    return {\n      scope: {\n        events: '=folderdropEvents'\n      },\n      link: function (scope, element) {\n        let events = [];\n        if (scope.events) {\n          let create_callback_event = (key, element) => {\n            return (event) => {\n              return scope.events[key](event, element);\n            };\n          };\n          for (let key in scope.events) {\n            if (scope.events.hasOwnProperty(key)) {\n              let obj = {\n                fn: create_callback_event(key, element),\n                key: key\n              };\n              events.push(obj);\n              element.on(key, obj.fn);\n            }\n          }\n          scope.$on('$destroy', () => {\n            for (var i = 0; i < events.length; i++) {\n              element.off(events[i].key, events[i].fn);\n            }\n          });\n        }\n\n      }\n\n    };\n  });","angular.module('app.directives')\n  .factory('spinalInspectUID', [function () {\n    let uid = 0;\n    let facto = {\n      uid: 0,\n      get_uid: () => {\n        uid = facto.uid;\n        ++facto.uid;\n        return uid;\n      },\n      get_last_uid: () => {\n        return uid;\n      },\n      elem: {}\n    };\n\n    //tooltip ~~\n    facto.tooltip = d3.select(\"body\").append(\"div\")\n      .attr(\"class\", \"inspect-tooltip\")\n      .style(\"opacity\", 1e-6);\n\n\n\n    return facto;\n  }])\n  .directive('spinalInspect', [\"spinalInspectUID\", function (spinalInspectUID) {\n    let directive = {\n      restrict: 'EA',\n      link: function (s, e, a) { // scope, element, attribute\n        let uid = spinalInspectUID.get_uid();\n        let elem = $('<div class=\"spinal-inspector-container\" id=\"spinalinspect_' + uid +\n          '\"></div><div class=\"spinal-inspect-btn-grp\"><button class=\"btn btn-primary fa fa-bullseye\" id=\"spinalinspect_btn_centerroot_' + uid +\n          '\"></button></div>');\n        spinalInspectUID.elem[uid] = elem;\n        $(e).append(elem);\n      }\n    };\n    return directive;\n  }]);","angular.module('app.spinalcom')\n  .factory('ngSpinalCore', ['$q', function ($q) {\n    var service = {};\n    service.conn = 0;\n\n    service.connect = function (option) {\n      service.conn = spinalCore.connect(option);\n    };\n    service.store = function (model, path) {\n      var deferred = $q.defer();\n      spinalCore.store(service.conn, model, path, function (model) {\n        deferred.resolve(model);\n      }, function () {\n        deferred.reject();\n      });\n      return deferred.promise;\n    };\n    service.load = function (path) {\n      var deferred = $q.defer();\n      spinalCore.load(service.conn, path, function (model) {\n        deferred.resolve(model);\n      }, function () {\n        deferred.reject();\n      });\n      return deferred.promise;\n    };\n    service.load_type = function (modelName, callback_success, callback_error) {\n      // var deferred = $q.defer();\n      spinalCore.load_type(service.conn, modelName, function (model) {\n        callback_success(model);\n        // deferred.resolve(model);\n      }, function () {\n        callback_error(model);\n        // deferred.reject();\n      });\n      // return deferred.promise;\n    };\n    service.load_right = function (ptr) {\n      var deferred = $q.defer();\n      spinalCore.load_right(service.conn, ptr, function (model) {\n        deferred.resolve(model);\n      }, function () {\n        deferred.reject();\n      });\n      return deferred.promise;\n    };\n    service.share_model = function (data, filename, flag, target_username) {\n      return spinalCore.share_model(service.conn, data, filename, flag, target_username);\n    };\n    return service;\n  }]);","angular.module('app.spinalcom')\n  .factory('spinalModelDictionary', [\"$q\", \"ngSpinalCore\", \"config\", \"authService\",\n    function ($q, ngSpinalCore, config, authService) {\n      let factory = {};\n      factory.model = 0;\n      factory.users = 0;\n      let _end_ = false;\n      let wait_init = [];\n\n      function reject(params) {\n        for (var i = 0; i < wait_init.length; i++) {\n          wait_init[i].reject(params);\n        }\n      }\n\n      function resolve(params) {\n        for (var i = 0; i < wait_init.length; i++) {\n          wait_init[i].resolve(params);\n        }\n      }\n\n\n      factory.init = () => {\n        return authService.wait_connect().then(() => {\n          var deferred = $q.defer();\n          if (factory.users == 0) {\n            wait_init.push(deferred);\n            if (wait_init.length === 1) {\n              let user = authService.get_user();\n              // ngSpinalCore.connect(\"http://\" + config.spinalhub_user + \":\" + config.spinalhub_pass +\n              //   \"@\" + config.spinalhub_url + \":\" + config.spinalhub_port + '/')\n              ngSpinalCore.load(\"/__users__/\" + user.username).then((m) => {\n                factory.model = m;\n                return ngSpinalCore.load(\"/etc/users\");\n                // deferred.resolve(m);\n              }, () => {\n                let msg = \"not able to load : \" + \"/__users__/\" + user.username;\n                console.error(msg);\n                // deferred.reject(msg);\n                reject(msg);\n              }).then((u) => {\n                factory.users = u;\n                _end_ = false;\n                // deferred.resolve(factory.model);\n                resolve(factory.model);\n              }, () => {\n                let msg = \"not able to load : \" + \"/etc/users\";\n                console.error(msg);\n                reject(msg);\n                // deferred.reject(msg);\n              });\n            }\n          } else\n            deferred.resolve(factory.model);\n          return deferred.promise;\n        }, () => {\n          let msg = \"not able to load : \" + \"/__users__/\" + user.username;\n          console.error(msg);\n          reject(msg);\n          // deferred.reject(msg);\n        });\n      };\n      return factory;\n    }\n  ]);","angular.module('app.spinalcom')\n  .service('spinalFileSystem', [\"$q\", \"spinalModelDictionary\", \"$rootScope\", \"$timeout\", \"goldenLayoutService\",\n    function ($q, spinalModelDictionary, $rootScope, $timeout, goldenLayoutService) {\n      // let this = {};\n      this.current_dir = 0;\n      this.model = 0;\n      this.id = 1;\n      this.folderExplorer_dir = {};\n      let listener_list = {};\n      this.curr_window = 0;\n\n      this.emit_subcriber = (name, arg) => {\n        let listeners = listener_list[name];\n        if (listeners) {\n          for (var i = 0; i < listeners.length; i++) {\n            if (listeners[i])\n              listeners[i](arg);\n          }\n        }\n      };\n      this.subcribe = (name, listener) => {\n        let listeners = listener_list[name];\n        if (!listeners) {\n          listener_list[name] = [];\n          listeners = listener_list[name];\n        }\n        listeners.push(listener);\n        return (() => {\n          let indexOfListener = listeners.indexOf(listener);\n          if (indexOfListener !== -1) {\n            listeners[indexOfListener] = null;\n          }\n        });\n      };\n      this.unsubcribe = (name, listener) => {\n        let listeners = listener_list[name];\n        let indexOfListener = listeners.indexOf(listener);\n        if (indexOfListener !== -1) {\n          listeners[indexOfListener] = null;\n        }\n      };\n\n\n      this.init = () => {\n        return spinalModelDictionary.init().then((m) => {\n          if (this.model == 0) {\n            this.model = m;\n            this.current_dir = m;\n            this.model.bind(() => {\n              this.emit_subcriber(\"SPINAL_FS_ONCHANGE\");\n            });\n          }\n        }, (err) => {\n          //nothing for now\n        });\n      };\n\n      this.load_dir = (f) => {\n        let deferred = $q.defer();\n        f.load((m) => {\n          m.bind(() => {\n            this.emit_subcriber(\"SPINAL_FS_ONCHANGE\");\n          }, false);\n          deferred.resolve(m);\n        }, () => {\n          deferred.reject();\n        });\n        return deferred.promise;\n      };\n\n\n\n      this.deferGetFolderJson_rec = (prom_arr, all_dir, dir, arr, name, parent, opened) => {\n        let deferred = $q.defer();\n        setTimeout(() => {\n          deferred.resolve(this.getFolderJson_rec(all_dir, dir, arr, name, parent, opened));\n        }, 100);\n        return deferred.promise;\n      };\n\n      // {\n      //   id          : \"string\" // required\n      //   parent      : \"string\" // required\n      //   text        : \"string\" // node text\n      //   icon        : \"string\" // string for custom\n      //   state       : {\n      //     opened    : boolean  // is the node open\n      //     disabled  : boolean  // is the node disabled\n      //     selected  : boolean  // is the node selected\n      //   },\n      //   li_attr     : {}  // attributes for the generated LI node\n      //   a_attr      : {}  // attributes for the generated A node\n      // }\n      this.getFolderJson_rec = (all_dir, dir, arr = [], name = 'home', parent = '#', opened = true) => {\n        let current;\n        var prom_arr = [];\n        // search if not existing\n\n        if (FileSystem._tmp_objects[dir._server_id]) {\n          return this.deferGetFolderJson_rec(prom_arr, all_dir, dir, arr, name, parent, opened);\n        }\n\n\n\n\n        for (var key in all_dir) {\n          let n = all_dir[key];\n          if (n.model == dir._server_id && n.text == name && n.parent == parent) {\n            current = n;\n            break;\n          }\n        }\n\n        if (!current) { // current not found\n          current = {\n            model: dir._server_id,\n            id: this.id,\n            parent: parent,\n            text: name,\n            state: {\n              opened: opened\n            }\n          };\n          this.id++;\n          if (opened == true ||\n            (typeof all_dir[current.id] != 'undefined' &&\n              all_dir[current.id].state.opened == true)) {\n            current.state.opened = true;\n          }\n        }\n\n\n\n\n\n\n\n\n\n        arr.push(current);\n        all_dir[current.id] = current;\n        this.folderExplorer_dir[current.id] = current;\n        let create_callback = (all_dir, arr, f, current) => {\n          return (m) => {\n            return this.getFolderJson_rec(all_dir, m, arr, f.name.get(), current.id, false);\n          };\n        };\n        for (var i = 0; i < dir.length; i++) {\n          let f = dir[i];\n          if (f._info.model_type.get() == 'Directory') {\n            prom_arr.push(this.load_dir(f).then(create_callback(all_dir, arr, f, current)));\n          }\n        }\n        return $q.all(prom_arr).then(() => {\n          return {\n            tree: arr,\n            all_dir: all_dir\n          };\n        });\n      };\n\n      this.onChangeNodeTree = (all_dir, data) => {\n        all_dir[data.node.original.id].state = data.node.state;\n        this.folderExplorer_dir[data.node.original.id].state = data.node.state;\n      };\n\n      this.onbdlclick = (all_dir, data) => {};\n      this.openFolder = (all_dir, node) => {\n        if (this.curr_window && FileSystem._objects[node.original.model]) {\n          this.curr_window.change_curr_dir(FileSystem._objects[node.original.model], this.create_path_with_node(node));\n        }\n\n      };\n      this.openFolderInNewLayer = (all_dir, node) => {\n\n        goldenLayoutService.createChild({\n          isClosable: true,\n          title: \"File Explorer\",\n          type: 'component',\n          componentName: 'SpinalHome',\n          componentState: {\n            template: 'FileExplorer.html',\n            module: 'app.FileExplorer',\n            controller: 'FileExplorerCtrl'\n          }\n        });\n        $timeout(() => {\n          if (this.curr_window && FileSystem._objects[node.original.model]) {\n            this.curr_window.change_curr_dir(FileSystem._objects[node.original.model], this.create_path_with_node(node));\n          }\n        });\n\n      };\n      this.newFolder = (all_dir, data, name) => {\n        let f = FileSystem._objects[data.original.model];\n        if (f) {\n\n          let folder_name = name;\n          let base_folder_name = folder_name.replace(/\\([\\d]*\\)/g, \"\");\n          let x = 0;\n          while (f.has(folder_name)) {\n            folder_name = base_folder_name + '(' + x + ')';\n            x++;\n          }\n          f.add_file(folder_name, new Directory());\n        }\n      };\n      this.FileExplorer_focus = (scope) => {\n        this.curr_window = scope;\n      };\n\n      this.get_node_by_id = (id) => {\n        for (var key in this.folderExplorer_dir) {\n          if (this.folderExplorer_dir[key].id == id)\n            return this.folderExplorer_dir[key];\n        }\n        return 0;\n      };\n      this.create_path_with_node = (data) => {\n        let path = [];\n        let parents = Array.from(data.parents).reverse();\n        // parent =\n        for (var i = 0; i < parents.length; i++) {\n          let parent = parents[i];\n          if (parent == \"#\")\n            continue;\n          let node_parent = this.get_node_by_id(parent);\n          if (node_parent) {\n            path.push({\n              name: node_parent.text,\n              _server_id: node_parent.model\n            });\n          }\n        }\n        path.push({\n          name: data.text,\n          _server_id: data.model\n        });\n        return path;\n      };\n\n      this.select_node = (all_dir, data) => {\n        if (this.curr_window && FileSystem._objects[data.node.original.model]) {\n          this.curr_window.change_curr_dir(FileSystem._objects[data.node.original.model], this.create_path_with_node(data.node));\n        }\n      };\n\n      this.deleteFolder = (all_dir, node) => {\n        console.log(\"delete folder \" + node.original.text);\n        let f = FileSystem._objects[node.original.model];\n        if (f) {\n          let parent = all_dir[node.original.parent];\n          if (FileSystem._objects[parent.model]) {\n            let m_parent = FileSystem._objects[parent.model];\n            for (var i = 0; i < m_parent.length; i++) {\n              if (m_parent[i]._ptr.data.value == f._server_id && node.original.text == m_parent[i].name.get()) {\n                m_parent.remove_ref(m_parent[i]);\n                break;\n              }\n            }\n          }\n        }\n      };\n\n      this.getFolderFiles = (scope) => {\n        return this.init().then(() => {\n          if (!scope.curr_dir) {\n            scope.curr_dir = this.model;\n            scope.fs_path.push({\n              name: \"home\",\n              _server_id: this.model._server_id\n            });\n          }\n          let create_file_explorer_obj = (model) => {\n            let deferred = $q.defer();\n\n            let wait_tmp_serverid_loop = (deferred, model) => {\n              if (FileSystem._tmp_objects[model._server_id]) {\n                setTimeout(() => {\n                  wait_tmp_serverid_loop(deferred, model);\n                }, 100);\n              } else {\n                let item = {\n                  name: model.name.get(),\n                  model_type: model._info.model_type.get(),\n                  _server_id: model._server_id,\n                  // selected: false,\n                  version: \"—\",\n                  last_modified: \"—\",\n                  owner: scope.user.username\n                };\n                if (model._info.model_type.get() === \"Path\") {\n                  if (model._info.remaining.get() != 0) {\n                    let percent = (model._info.to_upload.get() - model._info.remaining.get()) / model._info.to_upload.get();\n                    item.upload_pecent = percent * 100;\n                  }\n                } else if (model._info.model_type.get() === \"BIM Project\") {\n                  if (model._info.state) {\n                    switch (model._info.state.num.get()) {\n                      case 0:\n                        item.upload_pecent = 10;\n                        break;\n                      case 1:\n                        item.upload_pecent = 18;\n                        break;\n                      case 2:\n                        item.upload_pecent = 36;\n                        break;\n                      case 3:\n                        item.upload_pecent = 54;\n                        break;\n                      case 4:\n                        item.upload_pecent = 72;\n                        break;\n                      case 5:\n                        item.upload_pecent = 90;\n                        break;\n                      case 6:\n                        break;\n                      case 7:\n                        item.upload_pecent = 100;\n                        item.error = true;\n                        break;\n\n                    }\n\n                  }\n\n\n                  // if (model._info.remaining.get() != 0) {\n                  //   let percent = (model._info.to_upload.get() - model._info.remaining.get()) / model._info.to_upload.get();\n                  //   item.upload_pecent = percent * 100;\n                }\n\n                deferred.resolve(item);\n              }\n            };\n            wait_tmp_serverid_loop(deferred, model);\n            return deferred.promise;\n          };\n          let q = [];\n          for (var i = 0; i < scope.curr_dir.length; i++) {\n            let f = scope.curr_dir[i];\n            q.push(create_file_explorer_obj(f));\n          }\n          return $q.all(q);\n        });\n      };\n\n      this.getFolderJson = (all_dir) => {\n        return this.init().then(() => {\n          return this.getFolderJson_rec(all_dir, this.model);\n        });\n      };\n\n      this.FE_selected_drag = [];\n      this.FE_init_dir_drag = 0;\n      this.FE_fspath_drag = [];\n      this.FE_visited_scope = [];\n      this.addScopeVisted = (scope) => {\n        for (var i = 0; i < this.FE_visited_scope.length; i++) {\n          if (this.FE_visited_scope[i] == scope)\n            return;\n        }\n        this.FE_visited_scope.push(scope);\n      };\n\n      this.fileSelected = (model_id) => {\n        this.lastfileSelected = model_id;\n        if (this.lastinspector)\n          this.lastinspector.set_model(this.lastfileSelected);\n      };\n      this.setlastInspector = (scope) => {\n        this.lastinspector = scope;\n      };\n\n      return this;\n    }\n  ]);","angular.module('app.services')\n  .factory('goldenLayoutService', ['$q', '$window', '$templateCache', '$rootScope', '$compile',\n    function ($q, $window, $templateCache, $rootScope, $compile) {\n      var config = {\n        content: [{\n          type: 'row',\n          content: [{\n              isClosable: false,\n              title: \"Folder Explorer\",\n              type: 'component',\n              width: 20,\n              componentName: 'SpinalHome',\n              componentState: {\n                template: 'sideBar.html',\n                controller: 'sideBarCtrl'\n              }\n            },\n            {\n              isClosable: false,\n              title: \"File Explorer\",\n              type: 'component',\n              componentName: 'SpinalHome',\n              componentState: {\n                template: 'FileExplorer.html',\n                controller: 'FileExplorerCtrl'\n              }\n            },\n            {\n              isClosable: false,\n              title: \"Inspector\",\n              type: 'component',\n              componentName: 'SpinalHome',\n              componentState: {\n                template: 'inspector.html',\n                controller: 'InspectorCtrl'\n              }\n            }\n\n          ]\n        }]\n      };\n      let myLayout = 0;\n      let factory = {};\n      factory.init = () => {\n        if (myLayout == 0) {\n          myLayout = new GoldenLayout(config, $(\"#g-layout\"));\n          myLayout.registerComponent('SpinalHome', function (container, state) {\n            var element = container.getElement();\n            if (state.template == '') {\n\n              element.html();\n              $compile(element.contents())($rootScope);\n            } else {\n              element.html(\"<div class=\\\"gpannel-content\\\" ng-controller=\\\"\" + state.controller + \"\\\" ng-cloak>\" +\n                $templateCache.get(state.template) + \"</div>\");\n              $compile(element.contents())($rootScope);\n            }\n          });\n\n          myLayout.init();\n          angular.element($window).bind('resize', function () {\n            myLayout.updateSize();\n          });\n          $rootScope.$emit(\"GoldenLayout_READY\");\n        }\n      };\n\n      factory.wait_ready = () => {\n        return $q(function (resolve, reject) {\n          $rootScope.$on(\"GoldenLayout_READY\", () => {\n            resolve();\n          });\n        });\n      };\n\n\n\n      factory.createChild = (config) => {\n        myLayout.root.contentItems[0].addChild(config);\n      };\n\n      factory.createDragSource = (element, config) => {\n        myLayout.createDragSource(element, config);\n\n      };\n\n\n      return factory;\n    }\n  ])\n  .factory('layout_uid', function () {\n    let uid = 0;\n    return ({\n      get: () => {\n        let id = uid++;\n        return id;\n      }\n    });\n  });","angular.module('app.spinalcom')\n  .factory('authService', [\"$q\", \"ngSpinalCore\", \"config\", \"$http\",\n    function ($q, ngSpinalCore, config, $http) {\n      let factory = {};\n      let user = {\n        username: \"\",\n        password: \"\"\n      };\n      let is_Connected = false;\n      factory.save_user = (username, password) => {\n        user.username = username;\n        user.password = password;\n        window.localStorage.setItem(\"spinalhome_cfg\", btoa(JSON.stringify(user)));\n      };\n      factory.get_user = () => {\n        let _user = window.localStorage.getItem(\"spinalhome_cfg\");\n        if (_user) {\n          user = JSON.parse(atob(_user));\n        }\n        return user;\n      };\n\n      factory.save_user = (username, password) => {\n        user.username = username;\n        user.password = password;\n        window.localStorage.setItem(\"spinalhome_cfg\", btoa(JSON.stringify(user)));\n      };\n      factory.logout = (username, password) => {\n        if (user.username != \"\") {\n          factory.save_user(\"\", \"\");\n          location.reload();\n        }\n      };\n\n      factory.login = (username, password) => {\n        let deferred = $q.defer();\n        let url = \"/get_user_id\";\n        $http.get(url + \"?u=\" + username + \"&p=\" + password)\n          .then(function (data) {\n            var u = parseInt(data.data);\n            var i = 0;\n            if (u == -1) {\n              let msg = (\"Login Error: username / password pair not found.\");\n              // $mdToast.show(loginError_toast)\n              deferred.reject(msg);\n              for (i = 0; i < wait_connectList.length; i++) {\n                wait_connectList[i].reject();\n              }\n              wait_connectList = [];\n              return;\n            }\n            ngSpinalCore.connect(\"http://\" + u + \":\" + password +\n              \"@\" + config.spinalhub_url + \":\" + config.spinalhub_port + \"/\");\n            factory.save_user(username, password);\n            is_Connected = true;\n            deferred.resolve();\n            for (i = 0; i < wait_connectList.length; i++) {\n              wait_connectList[i].resolve();\n            }\n            wait_connectList = [];\n          }, function (data) {\n            let msg = ('Connection Error: Imposible to connect to the server.');\n            // $mdToast.show(connectionError_toast)\n            deferred.reject(msg);\n            for (var i = 0; i < wait_connectList.length; i++) {\n              wait_connectList[i].reject();\n            }\n            wait_connectList = [];\n          });\n        return deferred.promise;\n      };\n\n      factory.is_Connected = () => {\n        return is_Connected;\n      };\n      let wait_connectList = [];\n      factory.wait_connect = () => {\n        let deferred = $q.defer();\n        if (is_Connected == true) {\n          deferred.resolve();\n        } else\n          wait_connectList.push(deferred);\n        return deferred.promise;\n      };\n\n      return factory;\n    }\n  ]);","angular.module('app.sidebar', ['jsTree.directive', 'app.services', 'app.spinalcom'])\n  .controller('sideBarCtrl', [\"$scope\", \"$rootScope\", \"spinalFileSystem\", \"$mdDialog\", \"$injector\",\n    function ($scope, $rootScope, spinalFileSystem, $mdDialog, $injector) {\n      $scope.injector = $injector;\n      $scope.fsdir = [];\n      $scope.all_dir = {};\n      let selected_node = 0;\n      var newFolder_prompt = $mdDialog.prompt()\n        .title('Input the name of the new folder')\n        .placeholder('Folder Name')\n        .initialValue('New Folder')\n        .required(true)\n        .ok('Ok')\n        .cancel('Cancel');\n\n      $scope.DnD_callback = (op, node, par, pos, more) => {\n        if (((op === \"move_node\" || op === \"copy_node\") && node.type && node.type == \"root\") || par.id == \"#\") {\n          return false;\n        }\n\n        if (node.original.model == par.original.model)\n          return false;\n\n        if ((op === \"move_node\" || op === \"copy_node\") && more && more.core) {\n          if (confirm('Are you sure you want to move the folder ?')) {\n            // UPDATE SPINALCORE MODELS HERE\n            let m_parent = FileSystem._objects[par.original.model];\n            let m_node;\n            let n_par = spinalFileSystem.folderExplorer_dir[node.original.parent];\n            let n_parent = FileSystem._objects[n_par.model];\n            let n;\n            for (var i = 0; i < n_parent.length; i++) {\n              if (n_parent[i]._ptr.data.value == node.original.model) {\n                m_node = n_parent[i];\n                break;\n              }\n            }\n\n            if (!m_parent || !m_node)\n              return false;\n\n            if (m_parent != n_parent) {\n              let node_name = m_node.name.get();\n              let base_node_name = node_name;\n              let x = 0;\n              while (m_parent.has(node_name)) {\n                node_name = base_node_name + '(' + x + ')';\n                x++;\n              }\n              if (node_name != m_node.name.get())\n                m_node.name.set(node_name);\n            }\n            if (op == \"move_node\" || ((m_parent == n_parent) && op == \"copy_node\")) {\n              for (i = 0; i < n_parent.length; i++) {\n                let f = n_parent[i];\n                if (f == m_node) {\n                  n_parent.splice(i, 1);\n                  if (i < pos)\n                    pos--;\n                  break;\n                }\n              }\n            }\n            // if ((m_parent == n_parent) && op == \"copy_node\") return false;\n            m_parent.insert(pos, [m_node]);\n            return true;\n          }\n          return false;\n        }\n        return true;\n\n      };\n\n\n      $scope.contextMenu = (node) => {\n        let apps = spinalDrive_Env.get_applications('FolderExplorer', node);\n        let create_action_callback = (node, app) => {\n          return function (obj) {\n            let share_obj = {\n              node: node,\n              model_server_id: node.original.model,\n              scope: $scope\n            };\n            app.action(share_obj);\n          };\n        };\n        let res = {};\n        for (var i = 0; i < apps.length; i++) {\n          let app = apps[i];\n          res[app.name] = {\n            label: app.label,\n            icon: app.icon,\n            action: create_action_callback(node, app)\n          };\n        }\n        return res;\n        // return {\n        //   \"Open\": {\n        //     \"label\": \"Open\",\n        //     icon: 'fa fa-window-maximize text-success',\n        //     \"action\": function (obj) {\n        //       console.log(this);\n        //       spinalFileSystem.openFolder($scope.all_dir, node);\n        //     }\n        //   },\n        //   \"Open in new Layer\": {\n        //     \"label\": \"Open in new Layer\",\n        //     separator_after: true,\n        //     icon: 'fa fa-window-restore text-success',\n        //     \"action\": function (obj) {\n        //       spinalFileSystem.openFolderInNewLayer($scope.all_dir, node);\n        //     }\n        //   },\n\n        //   \"New Folder\": {\n        //     \"label\": \"New Folder\",\n        //     icon: 'fa fa-folder text-warning',\n        //     \"action\": function (obj) {\n        //       $mdDialog.show(newFolder_prompt).then(function (result) {\n        //         spinalFileSystem.newFolder($scope.all_dir, node, result);\n        //       }, function () {});\n        //     }\n        //   },\n        //   \"Delete Folder\": {\n        //     \"label\": \"Delete Folder\",\n        //     icon: 'fa fa-trash text-danger',\n        //     \"action\": function (obj) {\n        //       spinalFileSystem.deleteFolder($scope.all_dir, node);\n        //     }\n        //   }\n        // };\n      };\n\n      $scope.treeCore = {\n        \"themes\": {\n          \"name\": \"default-dark\"\n        },\n        \"check_callback\": $scope.DnD_callback\n      };\n      let listener_destructor = spinalFileSystem.subcribe('SPINAL_FS_ONCHANGE', (events, args) => {\n        spinalFileSystem.getFolderJson($scope.all_dir).then((res) => {\n          $scope.fsdir = res.tree;\n          $scope.all_dir = res.all_dir;\n        });\n      });\n      $scope.$on('$destroy', listener_destructor);\n\n      $scope.select_node = (e, data) => {\n        console.log(\"select_node\");\n        console.log(data.node.original.model);\n        selected_node = data.node.original;\n        spinalFileSystem.select_node($scope.all_dir, data);\n      };\n      $scope.onChangeNodeTree = (e, data) => {\n        console.log(\"onChangeNodeTree\");\n        console.log(data);\n        spinalFileSystem.onChangeNodeTree($scope.all_dir, data);\n      };\n      $scope.onbdlclick = (event) => {\n        var node = $(event.target).closest(\"li\");\n        console.log(\"onbdlclick : \" + node[0].id);\n        spinalFileSystem.onbdlclick($scope.all_dir, node[0].id);\n      };\n\n      spinalFileSystem.init();\n      spinalFileSystem.getFolderJson($scope.all_dir).then((res) => {\n        console.log(res);\n        $scope.fsdir = res.tree;\n        $scope.all_dir = res.all_dir;\n      });\n    }\n  ]);","angular.module('app.controllers')\n  .controller('mainCtrl', [\"$scope\", \"$routeParams\", \"goldenLayoutService\", \"spinalModelDictionary\",\n    function ($scope, $routeParams, goldenLayoutService, spinalModelDictionary) {\n      $scope.my_test = \"truc\";\n      goldenLayoutService.init();\n    }\n  ]);","angular.module('app.FileExplorer', ['jsTree.directive', 'app.services', 'app.spinalcom', 'ngMaterial', 'md.data.table'])\n  .controller('FileExplorerCtrl', [\"$scope\", \"$rootScope\", \"spinalFileSystem\", \"$mdDialog\", \"authService\", \"$compile\", \"$injector\", \"layout_uid\",\n    function ($scope, $rootScope, spinalFileSystem, $mdDialog, authService, $compile, $injector, layout_uid) {\n      $scope.injector = $injector;\n      $scope.uid = layout_uid.get();\n      $scope.curr_dir = 0;\n      $scope.lastSelected = 0;\n      $scope.fs_path = [];\n      var newFolder_prompt = $mdDialog.prompt()\n        .title('Input the name of the new folder')\n        .placeholder('Folder Name')\n        .initialValue('New Folder')\n        .required(true)\n        .ok('Ok')\n        .cancel('Cancel');\n\n      $scope.onFocus = () => {\n        spinalFileSystem.FileExplorer_focus($scope);\n      };\n      $scope.onFocus();\n      $scope.directory = [];\n      $scope.user = authService.get_user();\n\n\n      $scope.fsmoveToParent = (dir) => {\n        let idx = $scope.fs_path.indexOf(dir);\n        $scope.fs_path.splice(idx + 1);\n        let f = FileSystem._objects[dir._server_id];\n        if (f) {\n          if (f instanceof File) {\n            f.load((m) => {\n              if (m) {\n                $scope.change_curr_dir(m, $scope.fs_path);\n              }\n            });\n          } else if (f instanceof Directory) {\n            $scope.change_curr_dir(f, $scope.fs_path);\n          }\n        }\n        // $scope.change_curr_dir(FileSystem._objects[dir._server_id], $scope.fs_path);\n      };\n      $scope.getIcon = (type) => {\n        return spinalDrive_Env.context_file_exp_app_icon[type] ? spinalDrive_Env.context_file_exp_app_icon[type] : spinalDrive_Env.context_file_exp_app_icon.default;\n        // }\n\n        // if (type == \"Directory\") {\n        //   return \"folder\";\n        // }\n        // if (type == \"Session\") {\n        //   return \"desktop_windows\";\n        // }\n        // return \"insert_drive_file\";\n      };\n\n      $scope.selectFile = (event, file) => {\n        if (event.ctrlKey == false) {\n          for (var i = 0; i < $scope.directory.length; i++) {\n            $scope.directory[i].selected = false;\n            $scope.directory[i].over = false;\n            $scope.directory[i].selectdrop = false;\n          }\n          console.log(file);\n        }\n        file.selected = !file.selected;\n      };\n      $scope.ondblclick = (file) => {\n        console.log(\"dbl click\");\n        console.log(file);\n        if (file.model_type == \"Directory\") {\n          let f = FileSystem._objects[file._server_id];\n          if (f) {\n            f.load((m) => {\n              if (m) {\n                $scope.fs_path.push({\n                  name: file.name,\n                  _server_id: file._server_id\n                });\n                $scope.change_curr_dir(m, $scope.fs_path);\n              }\n            });\n          }\n        }\n      };\n\n      $scope.change_curr_dir = (dir, path) => {\n        $scope.curr_dir = dir;\n        $scope.fs_path = path;\n        handleDirectoryFiles();\n      };\n\n      function handleDirectoryFiles() {\n        // let olddirectory = $scope.directory;\n        // $scope.directory = []\n        return spinalFileSystem.getFolderFiles($scope).then((res) => {\n          let i = 0;\n          let find_idx_in_dir = (res, i) => {\n            return res.findIndex((elem) => {\n              return $scope.directory[i]._server_id == elem._server_id;\n            });\n          };\n          while (i < $scope.directory.length) {\n            if (find_idx_in_dir(res, i) == -1) {\n              $scope.directory.splice(i, 1);\n              i = 0;\n            } else\n              i++;\n          }\n          let found = false;\n          for (i = 0; i < res.length; i++) {\n            found = false;\n            for (var y = 0; y < $scope.directory.length; y++) {\n              if ($scope.directory[y]._server_id === res[i]._server_id) {\n                $scope.directory[y].name = res[i].name;\n                $scope.directory[y].model_type = res[i].model_type;\n                $scope.directory[y].owner = res[i].owner;\n                $scope.directory[y].last_modified = res[i].last_modified;\n                $scope.directory[y].version = res[i].version;\n                if (res[i].upload_pecent)\n                  $scope.directory[y].upload_pecent = res[i].upload_pecent;\n                else\n                  $scope.directory[y].upload_pecent = res[i].upload_pecent;\n                found = true;\n                break;\n              }\n            }\n            if (found == false) {\n              $scope.directory.splice(y, 0, res[i]);\n            }\n          }\n        });\n      }\n      let listener_destructor = spinalFileSystem.subcribe('SPINAL_FS_ONCHANGE', handleDirectoryFiles);\n      $scope.$on('$destroy', listener_destructor);\n\n      $scope.enterTarget = 0;\n      $scope.getNbSelectedIcon = (type) => {\n        console.log(type);\n        let nb_selected = 0;\n        for (var i = 0; i < $scope.directory.length; i++) {\n          if ($scope.directory[i].selected)\n            nb_selected++;\n        }\n\n        if (nb_selected == 1) {\n          return $scope.getIcon(type);\n        } else if (nb_selected <= 9) {\n          return \"filter_\" + nb_selected;\n        }\n        return \"filter_9_plus\";\n      };\n\n      $scope.dragCfg = {\n        \"dragstart\": (event, obj) => {\n          console.log(\"dragstart\");\n          console.log(event);\n          if (obj.selected == false && event.ctrlKey != true) {\n            for (let i = 0; i < $scope.directory.length; i++) {\n              $scope.directory[i].selected = false;\n            }\n          }\n          obj.selected = true;\n          let clone = $(\"<div id=\\\"drag-extra\\\" class=\\\"fs-drag-item\\\"><ng-md-icon icon=\\\"\" +\n            $scope.getNbSelectedIcon(obj.model_type) +\n            \"\\\" style=\\\"fill: white;height: 24px;\\\" class=\\\"md-avatar-icon\\\"></ng-md-icon>\" +\n            \"<div style=\\\"float: left;margin-left: 20px;width: -webkit-fill-available;overflow: hidden;text-overflow: ellipsis;\\\">\" +\n            \"<span style=\\\"white-space: nowrap;\\\">\" + obj.name + \"</span></div></div>\");\n          $compile(clone[0])($rootScope);\n          clone.appendTo(\"body\");\n          event.dataTransfer.setDragImage(clone[0], 0, 0);\n          spinalFileSystem.FE_selected_drag = [];\n          for (let i = 0; i < $scope.directory.length; i++) {\n            if ($scope.directory[i].selected == true) {\n              $scope.directory[i].selectdrop = true;\n              spinalFileSystem.FE_selected_drag.push($scope.directory[i]);\n            }\n          }\n          spinalFileSystem.FE_init_dir_drag = $scope.curr_dir;\n          spinalFileSystem.FE_fspath_drag = $scope.fs_path;\n\n          spinalFileSystem.addScopeVisted($scope);\n          $rootScope.current_scope_drag = $scope;\n          $scope.$apply();\n          return false;\n        },\n        \"dragend\": (event, obj) => {\n          console.log(\"dragend\");\n          console.log(obj);\n          for (let i = 0; i < $scope.directory.length; i++) {\n            $scope.directory[i].selectdrop = false;\n            $scope.directory[i].over = false;\n\n          }\n          $scope.enterTarget = 0;\n          $scope.dropOnFolder = false;\n\n          for (var i = 0; i < spinalFileSystem.FE_visited_scope.length; i++) {\n            let scope = spinalFileSystem.FE_visited_scope[i];\n            for (var j = 0; j < scope.directory.length; j++) {\n              if (scope.directory[j].over == true) {\n                scope.directory[j].over = false;\n                break;\n              }\n            }\n            scope.dropOnFolder = false;\n            scope.$apply();\n\n          }\n          spinalFileSystem.FE_visited_scope = [];\n          // $scope.$apply();\n          return false;\n        },\n        \"dragenter\": (event) => {\n          event.preventDefault();\n          // console.log($scope.curr_dir);\n\n        },\n        \"dragover\": (event, obj) => {\n          event.preventDefault();\n          event.stopPropagation(); // Stops some browsers from redirecting.\n          console.log(\"over\");\n          if (obj._server_id == $scope.enterTarget._server_id)\n            return false;\n          // console.log(\"ENTER DRAG\");\n          if (obj.selected == true || obj.model_type != \"Directory\") {\n            $scope.enterTarget = 0;\n          } else {\n            $scope.enterTarget = obj;\n          }\n          for (let i = 0; i < $scope.directory.length; i++) {\n            $scope.directory[i].over = false;\n          }\n          if ($scope.enterTarget) {\n            event.dataTransfer.dropEffect = \"move\";\n            event.dataTransfer.effectAllowed = \"move\";\n            obj.over = true;\n          }\n          $scope.dropOnFolder = false;\n          $scope.$apply();\n          spinalFileSystem.addScopeVisted($scope);\n          for (var i = 0; i < spinalFileSystem.FE_visited_scope.length; i++) {\n            let scope = spinalFileSystem.FE_visited_scope[i];\n            if (scope != $scope) {\n              for (var j = 0; j < scope.directory.length; j++) {\n                if (scope.directory[j].over == true) {\n                  scope.directory[j].over = false;\n                  break;\n                }\n              }\n              scope.dropOnFolder = false;\n              scope.$apply();\n            }\n          }\n        },\n        \"drop\": (event, obj) => {\n          event.stopPropagation(); // Stops some browsers from redirecting.\n          event.preventDefault();\n          console.log(\"drop\");\n          let curr_dir = spinalFileSystem.FE_init_dir_drag;\n          let target = 0;\n          let i = 0;\n          for (; i < $scope.directory.length; i++) {\n            if ($scope.directory[i].over) {\n              target = $scope.directory[i];\n              break;\n            }\n          }\n          if (!target || target.model_type != \"Directory\")\n            return false;\n          let files = event.target.files;\n          if (!files || files.length === 0)\n            files = (event.dataTransfer ? event.dataTransfer.files : event.originalEvent.dataTransfer.files);\n          if (files.length > 0) {\n            // dnd files\n            console.log(\"folderDropCfg drop Files\");\n            console.log(files);\n            let m_tar = FileSystem._objects[target._server_id];\n            if (m_tar) {\n              $scope.upload_files(files, m_tar);\n            }\n            $scope.dropOnFolder = false;\n            $scope.$apply();\n\n            return false;\n          }\n\n          if (!target || target.model_type != \"Directory\")\n            return false;\n          let selected = spinalFileSystem.FE_selected_drag;\n          let m_tar = FileSystem._objects[target._server_id];\n          if (m_tar) {\n            for (i = 0; i < $scope.fs_path.length; i++) {\n              let path = FileSystem._objects[$scope.fs_path[i]._server_id];\n              if (path) {\n                if (path instanceof File) {\n                  if (path._ptr.data.value == curr_dir._server_id) {\n                    return false;\n                  }\n                } else if (path instanceof Directory) {\n                  if (path._server_id == curr_dir._server_id) {\n                    let found = false;\n                    if ($scope.fs_path.length >= 2) {\n                      console.log($scope.fs_path);\n                      for (var y = 0; y < selected.length; y++) {\n                        if (selected[y]._server_id == FileSystem._objects[$scope.fs_path[1]._server_id]._server_id) {\n                          found = true;\n                          break;\n                        }\n\n                      }\n                    }\n                    if (found == false)\n                      continue;\n                    return false;\n                  }\n                }\n              }\n\n            }\n          }\n          for (i = 0; i < selected.length; i++) {\n            let s = FileSystem._objects[selected[i]._server_id];\n            if (s)\n              curr_dir.remove_ref(s);\n          }\n          // let m_tar = FileSystem._objects[target._server_id];\n          if (m_tar) {\n            m_tar.load((m) => {\n              for (var i = 0; i < selected.length; i++) {\n                let s = FileSystem._objects[selected[i]._server_id];\n                if (s)\n                  m.push(s);\n              }\n\n            });\n          }\n          return false;\n        }\n      };\n      $scope.upload_files = (files, directory_target) => {\n        if (files.length > 0) {\n          for (var i = 0; i < files.length; i++) {\n            let file = files[i];\n            let filePath = new Path(file);\n            let name = $scope.get_unused_name(file.name, directory_target);\n            let mod_file = directory_target.add_file(file.name, filePath);\n          }\n        }\n      };\n      $scope.get_unused_name = (name, directory_target, idx) => {\n        let found = false;\n        for (let i = 0; i < directory_target.length; i++) {\n          if (directory_target[i].name.get() == name)\n            found = true;\n        }\n        if (found == true) {\n          if (!idx) {\n            idx = 0;\n            name += '(' + idx + ')';\n          } else ++idx;\n          let reg = /\\(\\d+\\)$/gm;\n          name = name.replace(reg, '(' + idx + ')');\n          return $scope.get_unused_name(name, directory_target, idx);\n        }\n        return name;\n      };\n\n\n      $scope.folderDropCfg = {\n        \"drop\": (event) => {\n          event.stopPropagation(); // Stops some browsers from redirecting.\n          event.preventDefault();\n          console.log(\"folderDropCfg drop\");\n          var files = event.target.files;\n          if (!files || files.length === 0)\n            files = (event.dataTransfer ? event.dataTransfer.files : event.originalEvent.dataTransfer.files);\n          if (files.length > 0) {\n            // dnd files\n            console.log(\"folderDropCfg drop Files\");\n            console.log(files);\n            let m_tar = $scope.curr_dir;\n            console.log($scope.directory);\n            $scope.upload_files(files, m_tar);\n            $scope.dropOnFolder = false;\n            $scope.$apply();\n            return false;\n          }\n          let curr_dir = spinalFileSystem.FE_init_dir_drag;\n          if (curr_dir == $scope.curr_dir)\n            return false;\n          let selected = spinalFileSystem.FE_selected_drag;\n\n          let m_tar = $scope.curr_dir;\n          if (m_tar) {\n            let i;\n            for (i = 0; i < $scope.fs_path.length; i++) {\n              let path = FileSystem._objects[$scope.fs_path[i]._server_id];\n\n              if (path) {\n                if (path instanceof File) {\n                  if (path._ptr.data.value == curr_dir._server_id) {\n                    return false;\n                  }\n                } else if (path instanceof Directory) {\n                  if (path._server_id == curr_dir._server_id) {\n                    let found = false;\n                    if ($scope.fs_path.length >= 1) {\n                      for (var y = 0; y < selected.length; y++) {\n                        if (selected[y]._server_id == FileSystem._objects[$scope.fs_path[1]._server_id]._server_id) {\n                          found = true;\n                          break;\n                        }\n\n                      }\n                    }\n                    if (found == false)\n                      continue;\n                    return false;\n                  }\n                }\n              }\n\n            }\n          }\n\n          for (let i = 0; i < selected.length; i++) {\n            let s = FileSystem._objects[selected[i]._server_id];\n            if (s)\n              curr_dir.remove_ref(s);\n          }\n          if (m_tar) {\n            for (var i = 0; i < selected.length; i++) {\n              let s = FileSystem._objects[selected[i]._server_id];\n              if (s)\n                m_tar.push(s);\n            }\n          }\n          $scope.dropOnFolder = false;\n          return false;\n        },\n        \"dragover\": (event) => {\n          event.preventDefault();\n          console.log(\"folderDropCfg over\");\n          for (var i = 0; i < $scope.directory.length; i++) {\n            if ($scope.directory[i].over == true) {\n              $scope.directory[i].over = false;\n              break;\n            }\n          }\n          $scope.enterTarget = 0;\n          $scope.dropOnFolder = true;\n          spinalFileSystem.addScopeVisted($scope);\n          for (i = 0; i < spinalFileSystem.FE_visited_scope.length; i++) {\n            let scope = spinalFileSystem.FE_visited_scope[i];\n            if (scope != $scope) {\n              for (var j = 0; j < scope.directory.length; j++) {\n                if (scope.directory[j].over == true) {\n                  scope.directory[j].over = false;\n                  break;\n                }\n              }\n              scope.dropOnFolder = false;\n              scope.$apply();\n            }\n          }\n          $scope.$apply();\n          return false;\n        },\n        \"dragenter\": (event) => {\n          event.preventDefault();\n          return false;\n        }\n\n      };\n\n      handleDirectoryFiles();\n\n      $scope.context_menu_file = [];\n      $scope.onrightclick = (index) => {\n        setTimeout(() => {\n          // console.log('#fe-menu-' + $scope.uid + '-' + index);\n          $('#fe-menu-' + $scope.uid + '-' + index).click();\n        });\n      };\n\n      $scope.open_context_menu_file = ($mdMenu, ev, file) => {\n        $scope.context_menu_file = spinalDrive_Env.get_applications('FileExplorer', {\n          file: file,\n          scope: $scope,\n        });\n        console.log($scope.context_menu_file);\n        console.log(file);\n        $mdMenu.open(ev);\n      };\n      $scope.context_menu_file_action = ($event, item, file) => {\n        console.log(\"ACTION\");\n        console.log($event);\n        console.log(item);\n        console.log(file);\n        item.launch_action({\n          evt: $event,\n          item: item,\n          file: file,\n          scope: $scope,\n        });\n      };\n\n      $scope.context_menu_curr_dir = [];\n\n      $scope.open_context_menu_curr_dir = ($mdMenu, ev) => {\n        $scope.context_menu_curr_dir = spinalDrive_Env.get_applications('FileExplorerCurrDir', {\n          scope: $scope,\n          model: $scope.curr_dir\n        });\n        console.log($scope.context_menu_curr_dir);\n        $mdMenu.open(ev);\n      };\n      $scope.context_menu_curr_dir_action = ($event, item) => {\n        item.launch_action({\n          evt: $event,\n          item: item,\n          model: $scope.curr_dir,\n          scope: $scope,\n        });\n      };\n\n\n    }\n  ]);","angular.module('app.controllers')\n  .controller('navbarCtrl', [\"$scope\", \"authService\", \"$location\",\n    function ($scope, authService, $location) {\n      $scope.username = \"\";\n      $scope.connected = false;\n\n      authService.wait_connect().then(() => {\n        $scope.username = authService.get_user().username;\n        $scope.connected = true;\n\n      });\n\n      $scope.logout = () => {\n        $location.path('/login');\n      };\n\n      // get in SpinalDrive_Env\n      $scope.layouts = [{\n          id: \"drag-folder-explorer\",\n          name: \"Folder Explorer\",\n          cfg: {\n            isClosable: true,\n            title: \"Folder Explorer\",\n            type: 'component',\n            width: 20,\n            componentName: 'SpinalHome',\n            componentState: {\n              template: 'sideBar.html',\n              module: 'app.sidebar',\n              controller: 'sideBarCtrl'\n            }\n          }\n        },\n\n        {\n          id: \"drag-file-explorer\",\n          name: \"File Explorer\",\n          cfg: {\n            isClosable: true,\n            title: \"File Explorer\",\n            type: 'component',\n            componentName: 'SpinalHome',\n            componentState: {\n              template: 'FileExplorer.html',\n              module: 'app.FileExplorer',\n              controller: 'FileExplorerCtrl'\n            }\n          }\n        },\n\n        {\n          id: \"drag-inspector\",\n          name: \"Inspector\",\n          cfg: {\n            isClosable: true,\n            title: \"Inspector\",\n            type: 'component',\n            componentName: 'SpinalHome',\n            componentState: {\n              template: 'inspector.html',\n              controller: 'InspectorCtrl'\n            }\n          }\n        },\n\n      ];\n\n\n\n\n\n    }\n  ]);","angular.module('app.FileExplorer')\n  .controller('InspectorCtrl', [\"$scope\", \"$injector\", \"spinalInspectUID\", \"authService\", \"$mdToast\", \"$interval\", \"spinalFileSystem\", \"$timeout\",\n    function ($scope, $injector, spinalInspectUID, authService, $mdToast, $interval, spinalFileSystem, $timeout) {\n      $scope.injector = $injector;\n      $scope.fs_path = [];\n      let svgGroup, rootnode, draw, update, centerNode, textGrp;\n      let tree_idx = 0;\n      let depthLength = [];\n      let maxLabelLength = 1;\n      let viewerWidth = 50;\n      let viewerHeight = 50;\n      let ptr_folow = [];\n      let animation_duration = 500;\n      let style = {\n        nodefill: {\n          empty: '#fff', // or atomic or unknown\n          ptrClosed: '#f00',\n          objClosed: '#0010f2',\n          lstClosed: '#00ab00',\n          ptrEmptyOrOpen: '#f0a9a9',\n          objEmptyOrOpen: '#87ceeb',\n          lstEmptyOrOpen: '#7fffd4'\n        }\n      };\n      let test = 0;\n      let menu = (d) => {\n        // console.log(d);\n        let apps = spinalDrive_Env.get_applications('Inspector', d);\n        let res = [];\n        let create_action_callback = (app) => {\n          return function (elm) {\n            let share_obj = {\n              model_server_id: d.data._server_id,\n              scope: $scope\n            };\n            app.action(share_obj);\n          };\n        };\n\n        for (var i = 0; i < apps.length; i++) {\n          let app = apps[i];\n          res.push({\n            title: app.label,\n            action: create_action_callback(app)\n          });\n        }\n        return res;\n      };\n\n      let diagonal = (s, d) => {\n        let path = `M ${s.y} ${s.x}\n                C ${(s.y + d.y) / 2} ${s.x},\n                  ${(s.y + d.y) / 2} ${d.x},\n                  ${d.y} ${d.x}`;\n        return path;\n      };\n      let zoom = () => {\n        if (d3.event.transform != null) {\n          svgGroup.attr(\"transform\", d3.event.transform);\n        }\n      };\n      let calc_dist_depth = (depth, mult) => {\n        let i = 0;\n        let res = 0;\n        while (i < depth) {\n          res += depthLength[i] * 2;\n          ++i;\n        }\n        res += depthLength[depth];\n        res *= mult;\n        return res;\n      };\n      angular.element(document).ready(function () {\n        let uid = spinalInspectUID.get_last_uid();\n        let elem = spinalInspectUID.elem[uid];\n        viewerWidth = elem.width();\n        viewerHeight = elem.height();\n        let elem_id = \"spinalinspect_\" + uid;\n        let element = d3.select(\"#\" + elem_id);\n        let tree = d3.tree().size([viewerHeight, viewerWidth]);\n        let zoomListener = d3.zoom().scaleExtent([0.1, 3]).on(\"zoom\", zoom);\n        centerNode = function (d) {\n          let x, y;\n          let depth = d.depth + 1;\n          let scale = 1;\n          x = 0;\n          depth -= d.depth;\n          y = -d.x0;\n          let x_limit = 120;\n          while (x < x_limit) {\n            x = -rootnode.y0;\n            x = x * scale + viewerWidth / 2;\n            x = x - calc_dist_depth(depth, 6) / 2 * scale;\n            if (x < x_limit) scale -= 0.01;\n          }\n          x -= calc_dist_depth(d.depth, 6) * scale;\n          y = y * scale + viewerHeight / 2;\n          baseSvg.transition().duration(animation_duration)\n            .call(zoomListener.transform, d3.zoomIdentity.translate(x, y).scale(scale));\n        };\n        element.select('svg').remove();\n        let baseSvg = element.append(\"svg\")\n          .attr(\"width\", viewerWidth).attr(\"height\", viewerHeight)\n          .classed(\"svg-content\", true)\n          .call(zoomListener);\n        baseSvg.on(\"dblclick.zoom\", null);\n\n        let centerrootbtn = d3.select(\"#spinalinspect_btn_centerroot_\" + uid);\n        centerrootbtn.on('click', () => {\n          if (!rootnode) return;\n          centerNode(rootnode);\n        });\n        textGrp = baseSvg.append('text')\n          .attr('class', 'nodeText')\n          .attr('x', viewerWidth / 2)\n          .attr('y', viewerHeight / 2)\n          .attr('text-anchor', \"middle\")\n          .attr('alignment-baseline', \"central\")\n          .attr('fill', \"#999\");\n        svgGroup = baseSvg.append(\"g\");\n\n        let onNodeClick = (d) => {\n          if (d.children) {\n            d._children = d.children;\n            d.children = null;\n          } else {\n            d.children = d._children;\n            d._children = null;\n          }\n          if (d.data.haveChild) {\n            if (!(d.children || d._children)) {\n              let m = FileSystem._objects[d.data._server_id];\n              if (m) {\n                if (m instanceof Ptr) {\n                  m.load((ptr) => {\n                    ptr.bind(onTreeChange, false);\n                    let res = {};\n                    ptr_folow.push(ptr);\n                    pushToJson(ptr, res, d, d.depth + 2, d.depth + 1);\n                    d.children = [res];\n                    d.data.children = d.children;\n                    update(d);\n                    centerNode(d);\n                  });\n                  return;\n                } else {\n                  pushToJson(m, d, d.parent, d.depth + 1, d.depth, d.data.name);\n                }\n              }\n            }\n          }\n          update(d);\n          centerNode(d);\n        };\n        draw = () => {\n          baseSvg.attr(\"width\", viewerWidth).attr(\"height\", viewerHeight);\n          if (textGrp)\n            textGrp.attr('x', viewerWidth / 2).attr(\"y\", viewerHeight / 2).text('Please Drop file from \"File Explorer\" here to inspect them.');\n          if (!rootnode) return;\n          rootnode.x0 = viewerHeight / 2;\n          rootnode.y0 = 0;\n          update(rootnode);\n        };\n        let click_focus = (d) => {\n          centerNode(d);\n        };\n        update = (source) => {\n          let _tree = tree.size([viewerHeight, viewerWidth]);\n          let treemap = _tree(rootnode);\n          let nodes = treemap.descendants();\n          let links = treemap.descendants().slice(1);\n          nodes.forEach((d) => {\n            if (!depthLength[d.depth])\n              depthLength[d.depth] = d.data.name.length;\n            else\n              depthLength[d.depth] = Math.max(d.data.name.length, depthLength[d.depth]);\n          });\n          nodes.forEach((d) => {\n            d.y = calc_dist_depth(d.depth, 6);\n          });\n\n          let node = svgGroup.selectAll('g.node').data(nodes, ((d) => {\n            return (d.id || (d.id = ++tree_idx));\n          }));\n\n          let nodeEnter = node.enter().append('g').attr('class', 'node').attr('transform', (d) => {\n              return ('translate(' + source.y0 + ',' + source.x0 + ')');\n            }).on(\"mouseover\", node_mouseover)\n            .on(\"mousemove\", function (d) {\n              node_mousemove(d);\n            })\n            .on(\"mouseout\", node_mouseout);\n\n          nodeEnter.append('circle').attr('class', 'nodeCircle').attr('r', 1e-6)\n            .on('contextmenu', d3.contextMenu(menu)).on('click', onNodeClick);\n\n\n          nodeEnter.append('text')\n            .attr('x', (d) => {\n              return d.children || d._children ? -10 : 10;\n            }).attr('dy', '.35em').attr('class', 'nodeText').attr('text-anchor', (d) => {\n              return d.children || d._children ? \"end\" : \"start\";\n            })\n            .text((d) => {\n              return d.data.name;\n            })\n            .attr('fill', '#EEE')\n            .on('click', click_focus)\n            .on('contextmenu', d3.contextMenu(menu));\n\n          var nodeUpdate = nodeEnter.merge(node);\n          nodeUpdate.transition()\n            .duration(animation_duration)\n            .attr(\"transform\", function (d) {\n              return \"translate(\" + d.y + \",\" + d.x + \")\";\n            });\n\n          // Update the node attributes and style\n          nodeUpdate.select('circle.nodeCircle')\n            .attr('r', 8)\n            .style(\"fill\", function (d) {\n              if (d.data.obj) {\n                if (d.data.haveChild && !(d.children || d._children)) {\n                  return style.nodefill.objClosed;\n                }\n                if (d.children && d.children.length > 0)\n                  return style.nodefill.objEmptyOrOpen;\n                if (!(d.children || d._children))\n                  return style.nodefill.objEmptyOrOpen;\n                return style.nodefill.objClosed;\n              } else if (d.data.lst) {\n                if (d.data.haveChild && !(d.children || d._children)) {\n                  return style.nodefill.lstClosed;\n                }\n                if (d.children && d.children.length > 0)\n                  return style.nodefill.lstEmptyOrOpen;\n                if (!(d.children || d._children))\n                  return style.nodefill.lstEmptyOrOpen;\n                return style.nodefill.lstClosed;\n              } else if (d.data.ptr) {\n                if (d.data.haveChild && !(d.children || d._children)) {\n                  return style.nodefill.ptrClosed;\n                }\n                if (d.children && d.children.length > 0)\n                  return style.nodefill.ptrEmptyOrOpen;\n                if (!(d.children || d._children))\n                  return style.nodefill.ptrEmptyOrOpen;\n                return style.nodefill.ptrClosed;\n              }\n              return style.nodefill.empty; // default\n            }).attr('cursor', 'pointer');\n\n\n          nodeUpdate.select('text.nodeText')\n            .attr('x', (d) => {\n              return d.children ? -10 : 10;\n            }).attr('text-anchor', (d) => {\n              return d.children ? \"end\" : \"start\";\n            }).text((d) => {\n              return d.data.name;\n            });\n\n          let nodeExit = node.exit().transition().duration(animation_duration).attr('transform', (d) => {\n            return 'translate(' + source.y + ',' + source.x + ')';\n          }).remove();\n          nodeExit.select('circle').attr('r', 0);\n          nodeExit.select('text').style('fill-opacity', 0);\n          let link = svgGroup.selectAll('path.link').data(links, (d) => {\n            return d.id;\n            // return d.target.id;\n          });\n          let linkEnter = link.enter().insert('path', 'g').attr('class', 'link').attr('d', (d) => {\n            let o = {\n              x: source.x0,\n              y: source.y0\n            };\n            return diagonal(o, o);\n          });\n\n          // UPDATE\n          let linkUpdate = linkEnter.merge(link);\n\n          // Transition back to the parent element position\n          linkUpdate.transition()\n            .duration(animation_duration)\n            .attr('d', (d) => {\n              return diagonal(d, d.parent);\n            });\n\n          // Remove any exiting links\n          let linkExit = link.exit().transition()\n            .duration(animation_duration)\n            .attr('d', (d) => {\n              let o = {\n                x: source.x,\n                y: source.y\n              };\n              return diagonal(o, o);\n            })\n            .remove();\n\n          // Store the old positions for transition.\n          nodes.forEach((d) => {\n            d.x0 = d.x;\n            d.y0 = d.y;\n          });\n        };\n\n\n        // resize\n        let check_redraw = () => {\n          if ((viewerWidth != elem.width()) || (viewerHeight != elem.height())) {\n            viewerWidth = elem.width();\n            viewerHeight = elem.height();\n            draw();\n          }\n        };\n        let interval_resize = $interval(check_redraw, 600);\n        $scope.$on(\"$destroy\", function () {        \n          $interval.cancel(interval_resize);\n          interval_resize = undefined;\n        });\n      });\n\n      let add_table_row = (table, key, value) => {\n        let tr = table.append('tr');\n        tr.append('td').text(key);\n        tr.append('td').text(value);\n      };\n\n      function strncmp(a, b, n) {\n        return a.substring(0, n) == b.substring(0, n);\n      }\n\n      function node_mouseover(d) {\n        spinalInspectUID.tooltip.transition()\n          .duration(300)\n          .style(\"opacity\", 1);\n        spinalInspectUID.tooltip.selectAll('table').remove();\n        let table = spinalInspectUID.tooltip.append('table');\n\n        add_table_row(table, \"Contructor\", d.data._constructor);\n        add_table_row(table, \"Server_id\", d.data._server_id);\n\n        let m = FileSystem._objects[d.data._server_id];\n        if (m) {\n          if (m instanceof Lst) {\n            add_table_row(table, \"Length\", m.length);\n          } else if (m instanceof Str) {\n            let data = m.get();\n            add_table_row(table, \"Data\", data);\n            add_table_row(table, \"Length\", m.length);\n            let imgtype = \"data:image/\";\n            if (strncmp(data, imgtype, imgtype.length)) {\n              let tr = table.append('tr');\n              tr.append('td').text(\"Preview\");\n              let img = tr.append('td').append(\"img\");\n              img.attr(\"src\", data);\n              img.attr(\"alt\", \"preview\");\n              img.style(\"max-height\", 100);\n              img.style(\"max-width\", 100);\n            }\n          } else if (m instanceof Val) {\n            add_table_row(table, \"Value\", m.get());\n          } else if (m instanceof Ptr) {\n            add_table_row(table, \"Target Ptr\", m.data.value);\n            m.load((ptr) => {\n              if (ptr)\n                add_table_row(table, \"Target Contructor\", ptr.constructor.name);\n            });\n          } else if (m instanceof TypedArray) {\n            add_table_row(table, \"Data\", m.get());\n          }\n\n        }\n      }\n\n      function node_mousemove(d) {\n        spinalInspectUID.tooltip\n          .style(\"left\", (d3.event.pageX) + \"px\")\n          .style(\"top\", (d3.event.pageY) + \"px\");\n      }\n\n      function node_mouseout() {\n        spinalInspectUID.tooltip.transition()\n          .duration(300)\n          .style(\"opacity\", 1e-6);\n      }\n      let timeout_check_node = null;\n      let timeout_update_graph = null;\n      let onTreeChange = () => {\n        if (timeout_check_node) return;\n        // rootnode;\n        timeout_check_node = $timeout(() => {\n          timeout_check_node = null;\n          check_nodes_rec(rootnode, rootnode.data.name);\n          if (timeout_update_graph) return;\n          timeout_update_graph = $timeout(() => {\n            timeout_update_graph = null;\n            update(rootnode);\n          }, 500);\n        }, 500);\n      };\n      let check_nodes_rec = (n, name) => {\n        if (!(n && n.data && n.data._server_id)) return;\n        let m = FileSystem._objects[n.data._server_id];\n        if (m) {\n          // if (!m.has_been_modified()) return;\n          if (!name)\n            name = n.data.name;\n          n.data._constructor = m.constructor.name;\n          n.data._server_id = m._server_id;\n          if (m instanceof Val || m instanceof Bool) {\n            n.data.name = n.data.name.replace(/ *= [.\\-\\w]*/g, \"\");\n            n.data.name += ` = ${m.get()}`;\n          } else if (m instanceof Str) {\n            let str = m.get();\n            if (str.length > 25)\n              str = str.substring(0, 25) + '...';\n            n.data.name = n.data.name.replace(/ *= *\"*\\w*.*\"*/g, \"\");\n            n.data.data = `${name} = \\\"${m.get()}\\\"`;\n            n.data.name += ` = \\\"${str}\\\"`;\n          } else if (m instanceof TypedArray) {\n            n.data.name = n.data.name.replace(/ *= [0-9.e\\-]*/g, \"\");\n            n.data.name += ` = ${m._size}`;\n          } else if (m instanceof Ptr) {\n            n.data.ptr = m.data.value;\n            n.data.name = n.data.name.replace(/ *= *\"*\\w*\"*/g, \"\");\n            n.data.name += ` = \\\"${m.data.value}\\\"`;\n            n.data.haveChild = true;\n            let children = n.children || n._children;\n            if (!children) return; // children not charged yet\n            m.load((ptr) => {\n              if (children[0].data._server_id == ptr._server_id) {\n                check_nodes_rec(children[0]);\n              }\n            });\n          } else if (m instanceof Lst) {\n            n.data.name = n.data.name.replace(/\\[[0-9]*\\]/g, \"\");\n            n.data.name += `[${m.length}]`;\n            n.data.lst = true;\n            if (m.length === 0) {\n              n.data.haveChild = false;\n            } else\n              n.data.haveChild = true;\n            let children = n.children || n._children;\n            if (!children) {\n              // children not loaded yet\n              return;\n            }\n\n            for (let i = 0; i < m.length; i++) {\n              if (children[i] && children[i].data && children[i].data._server_id &&\n                children[i].data._server_id === m[i]._server_id) {\n                check_nodes_rec(children[i]);\n              } else {\n                // check if already exist\n                let j = i;\n                let found = -1;\n                for (; j < children.length; j++) {\n                  // children[j];\n                  if (children[j] && children[j].data && children[j].data._server_id &&\n                    children[j].data._server_id === m[i]._server_id) {\n                    found = j;\n                    break;\n                  }\n                }\n                // if exist splice to remove and add it to the right place\n                if (found != -1) {\n                  let items = children.splice(j, 1);\n                  if (items.length > 0)\n                    children.splice(i, 0, items[0]);\n                }\n                // if not exist create it\n                else {\n                  let res = {};\n                  pushToJson(m[i], res, n, n.depth + 1, n.depth + 1);\n                  children.splice(i, 0, res);\n                }\n              }\n            }\n            if (m.length < children.length)\n              children.splice(m.length, children.length - m.length);\n            if (children.length === 0) {\n              n.children = n._children = n.data.children = n.data._children = null;\n            }\n          } else if (m instanceof Model) {\n            n.data.obj = true;\n            n.data.name = n.data.name.replace(/{[0-9]*}/g, \"\");\n            n.data.name += `{${m._attribute_names.length}}`;\n            let i = 0;\n            let children = n.children || n._children;\n            if (m._attribute_names.length === 0) {\n              n.data.haveChild = false;\n            } else\n              n.data.haveChild = true;\n            if (!children) {\n              return; // children not loaded yet\n            }\n            for (i = 0; i < children.length; i++) {\n              children[i].data.used = false;\n            }\n            for (i = 0; i < m._attribute_names.length; i++) {\n              let model_child = m[m._attribute_names[i]];\n              let found = false;\n              for (let j = 0; j < children.length; j++) {\n                let child = children[j];\n                if (child && child.data && child.data._server_id &&\n                  model_child._server_id === child.data._server_id) {\n                  child.data.used = true;\n                  check_nodes_rec(child);\n                  found = true;\n                }\n              }\n              if (found == false) {\n                let res = {};\n                pushToJson(m[i], res, n, n.depth + 1, n.depth + 1);\n                res.data.used = true;\n                children.push(res);\n              }\n            }\n            i = 0;\n            while (i < children.length) {\n              if (!children[i].data.used) {\n                children.splice(i, 1);\n                continue;\n              }\n              i++;\n            }\n          }\n\n        }\n      };\n      $scope.onFocus = () => {\n        spinalFileSystem.setlastInspector($scope);\n      };\n      $scope.set_model = (model_id) => {\n        for (var i = 0; i < ptr_folow.length; i++) {\n          ptr_folow[i].unbind(onTreeChange);\n        }\n        ptr_folow = [];\n        $scope.model = spinalFileSystem.lastfileSelected;\n        let m = FileSystem._objects[model_id];\n        if (m) {\n          ptr_folow.push(m);\n          m.bind(onTreeChange);\n          $scope.new_tree(m);\n        }\n      };\n\n      let pushToJson = (m, n, parent, max_depth = 1, depth = 0, name = m.constructor.name) => {\n        n.parent = parent;\n        n.depth = depth;\n        n.data = {};\n        n.data.name = name;\n        n.data._constructor = m.constructor.name;\n        n.data._server_id = m._server_id;\n\n        ++depth;\n        if (m instanceof Lst) {\n          n.data.name = n.data.name.replace(/\\[[0-9]*\\]/g, \"\");\n          n.data.name += `[${m.length}]`;\n          n.data.lst = true;\n          if (m.length == 0) {\n            n.data.haveChild = false;\n            return;\n          }\n          n.data.haveChild = true;\n          if (depth > max_depth) {\n            return;\n          }\n          n.children = [];\n          n.data.children = n.children;\n          for (let i = 0; i < m.length; i++) {\n            let res = {};\n            pushToJson(m[i], res, n, max_depth, depth);\n            n.children.push(res);\n          }\n        } else if (m instanceof Val || m instanceof Bool) {\n          n.data.name += ` = ${m.get()}`;\n        } else if (m instanceof Str) {\n          let str = m.get();\n          if (str.length > 25)\n            str = str.substring(0, 25) + '...';\n          n.data.data = `${name} = \\\"${m.get()}\\\"`;\n          n.data.name += ` = \\\"${str}\\\"`;\n        } else if (m instanceof Ptr) {\n          n.data.haveChild = true;\n          n.data.ptr = m.data.value;\n          n.data.name += ` = \\\"${m.data.value}\\\"`;\n        } else if (m instanceof TypedArray) {\n          n.data.name += ` = ${m._size}`;\n        } else if (m instanceof Model) {\n          n.data.obj = true;\n          n.data.name = n.data.name.replace(/{[0-9]*}/g, \"\");\n          n.data.name += `{${m._attribute_names.length}}`;\n          if (depth > max_depth) {\n            if (m._attribute_names.length > 0) {\n              n.data.haveChild = true;\n            }\n            return;\n          }\n          n.children = [];\n          n.data.children = n.children;\n          for (var i = 0; i < m._attribute_names.length; i++) {\n            let res = {};\n            pushToJson(m[m._attribute_names[i]], res, n, max_depth, depth, m._attribute_names[i]);\n            n.children.push(res);\n          }\n\n\n        }\n      };\n\n      let toJson = (m, n, max_depth = 1, depth = 0, name = m.constructor.name) => {\n        n.name = name;\n        n._constructor = m.constructor.name;\n        n._server_id = m._server_id;\n\n        ++depth;\n        if (m instanceof Lst) {\n          n.name += `[${m.length}]`;\n          n.lst = true;\n          if (m.length == 0) return;\n          if (depth > max_depth) {\n            return;\n          }\n          n.haveChild = true;\n          n.children = [];\n          for (let i = 0; i < m.length; i++) {\n            let res = {};\n            toJson(m[i], res, max_depth, depth);\n            children.push(res);\n          }\n        } else if (m instanceof Val || m instanceof Bool) {\n          n.name += ` = ${m.get()}`;\n        } else if (m instanceof Str) {\n          let str = m.get();\n          if (str.length > 25)\n            str = str.substring(0, 25) + '...';\n          n.data = `${name} = \\\"${m.get()}\\\"`;\n          n.name += ` = \\\"${str}\\\"`;\n        } else if (m instanceof Ptr) {\n          n.haveChild = true;\n          n.ptr = m.data.value;\n          n.name += ` = \\\"${m.data.value}\\\"`;\n        } else if (m instanceof TypedArray) {\n          n.name += ` = ${m._size}`;\n        } else if (m instanceof Model) {\n          n.obj = true;\n          n.name += `{${m._attribute_names.length}}`;\n          if (depth > max_depth) {\n            if (m._attribute_names.length > 0) {\n              n.haveChild = true;\n            }\n            return;\n          }\n          n.children = [];\n          for (var i = 0; i < m._attribute_names.length; i++) {\n            let res = {};\n            toJson(m[m._attribute_names[i]], res, max_depth, depth, m._attribute_names[i]);\n            n.children.push(res);\n          }\n\n\n        }\n      };\n\n\n\n\n\n\n      $scope.new_tree = (model) => {\n        console.log(\"new tree\");\n        console.log(model);\n        if (!model) return;\n        if (textGrp)\n          textGrp.remove();\n        textGrp = null;\n        let res = {};\n        toJson(model, res);\n        rootnode = d3.hierarchy(res, function (d) {\n          return d.children;\n        });\n        if (draw) {\n          draw();\n          centerNode(rootnode);\n        }\n      };\n\n\n      $scope.folderDropCfg = {\n        \"drop\": (event) => {\n          event.stopPropagation(); // Stops some browsers from redirecting.\n          event.preventDefault();\n          let selected = spinalFileSystem.FE_selected_drag;\n          if (selected && selected[0]) { // change to multiple selection later\n            $scope.fs_path = Array.from(spinalFileSystem.FE_fspath_drag);\n            $scope.fs_path.push({\n              name: selected[0].name,\n              _server_id: selected[0]._server_id\n            });\n            $scope.set_model(selected[0]._server_id);\n          }\n          return false;\n        },\n        \"dragover\": (event) => {\n          event.preventDefault();\n\n          return false;\n        },\n        \"dragenter\": (event) => {\n          event.preventDefault();\n          return false;\n        }\n\n      };\n      spinalFileSystem.setlastInspector($scope);\n      $scope.set_model(spinalFileSystem.lastfileSelected);\n\n    }\n  ]);","angular.module('app.controllers')\n  .controller('loginCtrl', [\"$scope\", \"authService\", \"$mdToast\", \"$location\",\n    function ($scope, authService, $mdToast, $location) {\n      let toast = $mdToast.simple()\n        .hideDelay(3000);\n      let user = authService.get_user();\n      authService.logout();\n      $scope.conf = {\n        email: \"\",\n        password: \"\"\n      };\n      $scope.ConnectBtn = () => {\n        authService.login($scope.conf.email, $scope.conf.password).then(\n          () => {\n            $location.path('/home');\n          },\n          (err) => {\n            toast.textContent(err);\n            $mdToast.show(toast);\n          }\n        );\n      };\n\n    }\n  ]);"]}