{"version":3,"sources":["../../app/app.js","../../app/app.config.js","../../app/app.route.js","../../app/directives/navbar.js","../../app/services/spinalCore.js","../../app/services/spinalModelDictionary.js","../../app/services/goldenLayoutService.js","../../app/services/authService.js","../../app/controllers/mainCtrl.js","../../app/controllers/navbarCtrl.js","../../app/controllers/forgeViewerCtrl.js","../../app/controllers/loginCtrl.js"],"names":[],"mappings":"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","file":"app.compile.min.js","sourcesContent":["angular.module('app.route', ['ngRoute']);\nangular.module('app.services', []);\nangular.module('app.directives', []);\nangular.module('app.controllers', []);\nangular.module('app.spinalcom', ['settings', 'ngMaterial']);\n\n\nangular.module('SpinalApp', ['ngAnimate', 'ngMaterial', 'app.directives', 'app.route',\n    'app.services', 'app.controllers', 'ngMdIcons', 'settings', 'app.spinalcom'\n  ])\n  .run(['$rootScope', '$location', 'authService', function ($rootScope, $location, authService) {\n    let user = authService.get_user();\n    $rootScope.$on('$routeChangeStart', function (event, next, current) {\n      if (next.$$route.authenticate) {\n        if (!authService.is_Connected()) {\n          authService.login(user.username, user.password)\n            .then(function () {},\n              function () {\n                $location.path('/login');\n              });\n        }\n      }\n    });\n  }])\n\n\n  .config([\"$mdThemingProvider\", function ($mdThemingProvider) {\n    $mdThemingProvider.theme('altTheme')\n      .primaryPalette('grey', {\n        'default': '200'\n      })\n      .accentPalette('grey', {\n        'default': '700'\n      })\n      .dark();\n    $mdThemingProvider.theme('default')\n      .dark();\n\n    $mdThemingProvider.setDefaultTheme('altTheme');\n    $mdThemingProvider.alwaysWatchTheme(true);\n  }]).run([\"$templateCache\", \"$http\", function ($templateCache, $http) {\n    let load_template = (uri, name) => {\n      $http.get(uri).then((response) => {\n        $templateCache.put(name, response.data);\n      }, (errorResponse) => {\n        console.log('Cannot load the file ' + uri);\n      });\n    };\n    let toload = [{\n      uri: 'app/templates/forgeviewer.html',\n      name: 'forgeviewer.html'\n    }];\n    for (var i = 0; i < toload.length; i++) {\n      load_template(toload[i].uri, toload[i].name);\n    }\n\n    // $templateCache.put('templateId.html', 'This is the content of the template');\n  }]);","angular.module('settings', [])\n  .constant('config', {\n    main_path: '/',\n    spinalhub_url: '127.0.0.1',\n    spinalhub_port: '8888',\n    spinalhub_user: '168',\n  });","angular.module('app.route')\n  .config([\"$routeProvider\", \"$locationProvider\",\n    function ($routeProvider, $locationProvider) {\n      $routeProvider\n\n        .when(\"/viewer/:filepath\", {\n          templateUrl: \"app/templates/main.html\",\n          authenticate: true,\n          controller: 'mainCtrl'\n        })\n        .when(\"/login\", {\n          templateUrl: \"app/templates/login.html\",\n          authenticate: false,\n          controller: 'loginCtrl'\n        })\n        .when('/404', {\n          authenticate: false,\n          controller: ['$location', function ($location) {\n            $location.replace('/drive/');\n          }]\n        }).otherwise({\n          redirectTo: '/404'\n        });\n\n      // .otherwise({\n      //   redirectTo: '/viewer'\n      // });\n    }\n  ]);","angular.module('app.directives')\n  .directive(\"navbar\", [\n    function () {\n      return {\n        restrict: 'E',\n        templateUrl: 'app/templates/navbar.html',\n        controller: 'navbarCtrl',\n      };\n    }\n  ])\n  .directive(\"menuGlayout\", ['goldenLayoutService', '$timeout',\n    function (goldenLayoutService, $timeout) {\n      return {\n        restrict: 'E',\n        scope: {\n          layoutInfo: '=info'\n        },\n        replace: true,\n        template: '<li ng-repeat=\\\"layout in layoutInfo\\\"  id=\\\"{{layout.id}}\\\"><a >{{layout.name}}</a></li>',\n        link: (scope, element, attrs) => {\n          goldenLayoutService.wait_ready().then(() => {\n            let create_callback = (goldenLayoutService, layout) => {\n              return () => {\n                goldenLayoutService.createChild(layout.cfg);\n              };\n            };\n            for (var i = 0; i < scope.layoutInfo.length; i++) {\n              let layout = scope.layoutInfo[i];\n              goldenLayoutService.createDragSource($(\"#\" + layout.id)[0], layout.cfg);\n              $(\"#\" + layout.id).click(create_callback(goldenLayoutService, layout));\n            }\n          });\n        }\n      };\n    }\n  ])\n  .directive('ngRightClick', [\"$parse\", function ($parse) {\n    return function (scope, element, attrs) {\n      var fn = $parse(attrs.ngRightClick);\n      element.bind('contextmenu', function (event) {\n        scope.$apply(function () {\n          event.preventDefault();\n          fn(scope, {\n            $event: event\n          });\n        });\n      });\n    };\n  }]);","angular.module('app.spinalcom')\n  .factory('ngSpinalCore', ['$q', function ($q) {\n    var service = {};\n    service.conn = 0;\n\n    service.connect = function (option) {\n      service.conn = spinalCore.connect(option);\n    };\n    service.store = function (model, path) {\n      var deferred = $q.defer();\n      spinalCore.store(service.conn, model, path, function (model) {\n        deferred.resolve(model);\n      }, function () {\n        deferred.reject();\n      });\n      return deferred.promise;\n    };\n    service.load = function (path) {\n      var deferred = $q.defer();\n      spinalCore.load(service.conn, path, function (model) {\n        deferred.resolve(model);\n      }, function () {\n        deferred.reject();\n      });\n      return deferred.promise;\n    };\n    service.load_type = function (model, path) {\n      var deferred = $q.defer();\n      spinalCore.load_type(service.conn, model, path, function (model) {\n        deferred.resolve(model);\n      }, function () {\n        deferred.reject();\n      });\n      return deferred.promise;\n    };\n    service.load_right = function (ptr) {\n      var deferred = $q.defer();\n      spinalCore.load_right(service.conn, ptr, function (model) {\n        deferred.resolve(model);\n      }, function () {\n        deferred.reject();\n      });\n      return deferred.promise;\n    };\n    service.share_model = function (data, filename, flag, target_username) {\n      return spinalCore.share_model(service.conn, data, filename, flag, target_username);\n    };\n    return service;\n  }]);","angular.module('app.spinalcom')\n  .factory('spinalModelDictionary', [\"$q\", \"ngSpinalCore\", \"config\", \"authService\", \"$routeParams\", \"$location\",\n    function ($q, ngSpinalCore, config, authService, $routeParams, $location) {\n      let factory = {};\n      factory.model = 0;\n      factory.init = () => {\n        var deferred = $q.defer();\n        if (factory.model == 0) {\n          authService.wait_connect().then(() => {\n            let user = authService.get_user();\n            let path = $routeParams.filepath;\n            if (path) {\n              path = atob(path);\n              ngSpinalCore.load(path).then((m) => {\n                factory.model = m;\n                console.log(m);\n                deferred.resolve(m);\n\n              }, () => {\n                let msg = \"not able to load : \" + path;\n                console.error(msg);\n                $location.replace('/drive/');\n                deferred.reject(msg);\n              });\n            }\n          }, () => {\n            let msg = \"not able to load : \" + path;\n            console.error(msg);\n            $location.replace('/drive/');\n            deferred.reject(msg);\n          });\n        } else\n          deferred.resolve(factory.model);\n        return deferred.promise;\n      };\n      return factory;\n    }\n  ]);","angular.module('app.services')\n  .factory('goldenLayoutService', ['$q', '$window', '$templateCache', '$rootScope', '$compile',\n    function ($q, $window, $templateCache, $rootScope, $compile) {\n      var config = {\n        content: [{\n          type: 'row',\n          content: [{\n            isClosable: false,\n            title: \"Viewer\",\n            type: 'component',\n            componentName: 'SpinalHome',\n            componentState: {\n              template: 'forgeviewer.html',\n              controller: 'forgeViewerCtrl'\n            }\n          }]\n        }]\n      };\n      let myLayout = 0;\n      let factory = {};\n      factory.init = () => {\n        if (myLayout == 0) {\n          myLayout = new GoldenLayout(config, $(\"#g-layout\"));\n          myLayout.registerComponent('SpinalHome', function (container, state) {\n            var element = container.getElement();\n            if (state.template == '') {\n\n              element.html();\n              $compile(element.contents())($rootScope);\n            } else {\n              element.html(\"<div class=\\\"gpannel-content\\\" ng-controller=\\\"\" + state.controller + \"\\\" ng-cloak>\" +\n                $templateCache.get(state.template) + \"</div>\");\n              $compile(element.contents())($rootScope);\n            }\n          });\n\n          myLayout.init();\n          angular.element($window).bind('resize', function () {\n            myLayout.updateSize();\n          });\n          $rootScope.$emit(\"GoldenLayout_READY\");\n        }\n      };\n\n      factory.wait_ready = () => {\n        return $q(function (resolve, reject) {\n          $rootScope.$on(\"GoldenLayout_READY\", () => {\n            resolve();\n          });\n        });\n      };\n\n\n\n      factory.createChild = (config) => {\n        myLayout.root.contentItems[0].addChild(config);\n      };\n\n      factory.createDragSource = (element, config) => {\n        myLayout.createDragSource(element, config);\n\n      };\n\n\n      return factory;\n    }\n  ])\n  .factory('layout_uid', function () {\n    let uid = 0;\n    return ({\n      get: () => {\n        let id = uid++;\n        return id;\n      }\n    });\n  });","angular.module('app.spinalcom')\n  .factory('authService', [\"$q\", \"ngSpinalCore\", \"config\", \"$http\",\n    function ($q, ngSpinalCore, config, $http) {\n      let factory = {};\n      let user = {\n        username: \"\",\n        password: \"\"\n      };\n      let is_Connected = false;\n      factory.save_user = (username, password) => {\n        user.username = username;\n        user.password = password;\n        window.localStorage.setItem(\"spinalhome_cfg\", btoa(JSON.stringify(user)));\n      };\n      factory.get_user = () => {\n        let _user = window.localStorage.getItem(\"spinalhome_cfg\");\n        if (_user) {\n          user = JSON.parse(atob(_user));\n        }\n        return user;\n      };\n\n      factory.save_user = (username, password) => {\n        user.username = username;\n        user.password = password;\n        window.localStorage.setItem(\"spinalhome_cfg\", btoa(JSON.stringify(user)));\n      };\n      factory.logout = (username, password) => {\n        if (user.username != \"\") {\n          factory.save_user(\"\", \"\");\n          location.reload();\n        }\n      };\n\n      factory.login = (username, password) => {\n        let deferred = $q.defer();\n        let url = \"/get_user_id\";\n        $http.get(url + \"?u=\" + username + \"&p=\" + password)\n          .then(function (data) {\n            var u = parseInt(data.data);\n            var i = 0;\n            if (u == -1) {\n              let msg = (\"Login Error: username / password pair not found.\");\n              // $mdToast.show(loginError_toast)\n              deferred.reject(msg);\n              for (i = 0; i < wait_connectList.length; i++) {\n                wait_connectList[i].reject();\n              }\n              wait_connectList = [];\n              return;\n            }\n            ngSpinalCore.connect(\"http://\" + u + \":\" + password +\n              \"@\" + config.spinalhub_url + \":\" + config.spinalhub_port + \"/\");\n            factory.save_user(username, password);\n            is_Connected = true;\n            deferred.resolve();\n            for (i = 0; i < wait_connectList.length; i++) {\n              wait_connectList[i].resolve();\n            }\n            wait_connectList = [];\n          }, function (data) {\n            let msg = ('Connection Error: Imposible to connect to the server.');\n            // $mdToast.show(connectionError_toast)\n            deferred.reject(msg);\n            for (var i = 0; i < wait_connectList.length; i++) {\n              wait_connectList[i].reject();\n            }\n            wait_connectList = [];\n          });\n        return deferred.promise;\n      };\n\n      factory.is_Connected = () => {\n        return is_Connected;\n      };\n      let wait_connectList = [];\n      factory.wait_connect = () => {\n        let deferred = $q.defer();\n        if (is_Connected == true) {\n          deferred.resolve();\n        } else\n          wait_connectList.push(deferred);\n        return deferred.promise;\n      };\n\n      return factory;\n    }\n  ]);","angular.module('app.controllers')\n  .controller('mainCtrl', [\"$scope\", \"$routeParams\", \"goldenLayoutService\", \"spinalModelDictionary\",\n    function ($scope, $routeParams, goldenLayoutService, spinalModelDictionary) {\n      goldenLayoutService.init();\n    }\n  ]);","angular.module('app.controllers')\n  .controller('navbarCtrl', [\"$scope\", \"authService\", \"$location\",\n    function ($scope, authService, $location) {\n      $scope.username = \"\";\n      $scope.connected = false;\n\n      authService.wait_connect().then(() => {\n        $scope.username = authService.get_user().username;\n        $scope.connected = true;\n\n      });\n\n      $scope.logout = () => {\n        $location.path('/login');\n      };\n\n      // get in SpinalDrive_Env\n      $scope.layouts = [\n\n        {\n          id: \"drag-viewer\",\n          name: \"viewer\",\n          cfg: {\n            isClosable: true,\n            title: \"Viewer\",\n            type: 'component',\n            componentName: 'SpinalHome',\n            componentState: {\n              template: 'forgeviewer.html',\n              controller: 'forgeViewerCtrl'\n            }\n          }\n        },\n\n      \n      ];\n\n\n\n\n\n    }\n  ]);","angular.module('app.controllers')\n  .controller('forgeViewerCtrl', [\"$scope\", \"$rootScope\", \"$mdDialog\", \"authService\", \"$compile\", \"$injector\", \"layout_uid\", \"spinalModelDictionary\",\n    function ($scope, $rootScope, $mdDialog, authService, $compile, $injector, layout_uid, spinalModelDictionary) {\n      $scope.injector = $injector;\n      $scope.uid = layout_uid.get();\n      spinalModelDictionary.init().then(function (ForgeFile) {\n        var viewerApp, viewables, indexViewable;\n        console.log(ForgeFile);\n\n\n        var viewerConfig = {\n          accessToken: 'eyJhbGciOiJIUzI1NiIsImtpZCI6Imp3dF9zeW1tZXRyaWNfa2V5In0.eyJjbGllbnRfaWQiOiJCRVBEbTl6ZktxeUF1dmFoWnh0SFhTbGo2UzhwMlJCUSIsImV4cCI6MTUxMzk2MjA1OSwic2NvcGUiOlsiZGF0YTp3cml0ZSIsImRhdGE6cmVhZCIsImJ1Y2tldDpyZWFkIiwiYnVja2V0OnVwZGF0ZSIsImJ1Y2tldDpjcmVhdGUiXSwiYXVkIjoiaHR0cHM6Ly9hdXRvZGVzay5jb20vYXVkL2p3dGV4cDYwIiwianRpIjoicGpVRnhIN2JlRjFBamk2WjlLaWZzWm5rZjlCUmUzVEdSNzNzYTcwWGRxS3BDRERiTmhXZ3pNSHlyQ3VmYzU1RiJ9.b4o7UaOiBvVViIKm2LcvchoYa8Btpe_I-iQIPzX8Rnk',\n          documentId: 'urn:dXJuOmFkc2sub2JqZWN0czpvcy5vYmplY3Q6bXl0ZXN0YnVja2V0YmVwZG05emZrcXlhdXZhaHp4dGh4c2xqNnM4cDJyYnEvdGVzdC5ydnQ'\n        }\n\n        var config3d = {\n          extensions: ['PanelExtension', \"Autodesk.ADN.Viewing.Extension.Color\"]\n        }\n        var options = {\n          env: 'AutodeskProduction',\n          accessToken: ''\n          // getAccessToken: function (onGetAccessToken) {\n          //     var accessToken = viewerConfig.accessToken;\n          //     var expireTimeSeconds = 60 * 30;\n          //     onGetAccessToken(accessToken, expireTimeSeconds);\n\n          // }\n        };\n\n        // var options = {\n        //     env: 'AutodeskProduction',\n        //     getAccessToken: function (onGetAccessToken) {\n        //         var accessToken = viewerConfig.accessToken;\n        //         var expireTimeSeconds = 60 * 30;\n        //         onGetAccessToken(accessToken, expireTimeSeconds);\n\n        //     }\n        // };\n\n        // var documentId = viewerConfig.documentId;\n        var documentId = 'urn:' + ForgeFile.urn.get();\n        // init_autodesk(documentId);\n        get_oAuthToken(ForgeFile, documentId, init_autodesk);\n\n        function get_oAuthToken(forgeFile, documentId, callback) {\n          forgeFile.oauth.set(\"\");\n          forgeFile.ask_token.set(true);\n          var ask_for_token = true;\n          var oauth_onchange = function () {\n            if (ask_for_token && forgeFile.oauth.get() != \"\") {\n              ask_for_token = false;\n              forgeFile.oauth.unbind(oauth_onchange);\n              options.accessToken = forgeFile.oauth.get();\n              callback(documentId);\n            }\n          };\n          forgeFile.oauth.bind(oauth_onchange)\n        }\n\n        // setTimeout(() => {\n        // console.log(123)\n        // $scope.$apply();\n        // Autodesk.Viewing.Initializer(options, function onInitialized() {\n        //     viewerApp = new Autodesk.Viewing.ViewingApplication('MyViewerDiv' + $scope.uid);\n        //     console.log(viewerApp);\n\n        //     viewerApp.registerViewer(viewerApp.k3D, Autodesk.Viewing.Private.GuiViewer3D, config3d);\n        //     viewerApp.loadDocument(documentId, onDocumentLoadSuccess, onDocumentLoadFailure);\n        // });\n        // }, 100);\n        function init_autodesk(documentId) {\n          Autodesk.Viewing.Initializer(options, function onInitialized() {\n            viewerApp = new Autodesk.Viewing.ViewingApplication('MyViewerDiv' + $scope.uid);\n            console.log(viewerApp);\n\n            viewerApp.registerViewer(viewerApp.k3D, Autodesk.Viewing.Private.GuiViewer3D, config3d);\n            viewerApp.loadDocument(documentId, onDocumentLoadSuccess, onDocumentLoadFailure);\n          });\n        }\n\n\n        function onDocumentLoadSuccess(doc) {\n          viewables = viewerApp.bubble.search({\n            'type': 'geometry',\n            'role': '3d'\n          });\n          if (viewables.length === 0) {\n            console.error('Document contains no viewables.');\n            return;\n          }\n          viewerApp.selectItem(viewables[viewables.length - 1].data, onItemLoadSuccess, onItemLoadFail);\n        }\n\n\n        function onDocumentLoadFailure(viewerErrorCode) {\n          console.error('onDocumentLoadFailure() - errorCode:' + viewerErrorCode);\n        }\n\n\n        function onItemLoadSuccess(viewer, item) {\n          console.log('Viewers are equal: ' + (viewer === viewerApp.getCurrentViewer()));\n        }\n\n\n        function onItemLoadFail(errorCode) {\n          console.error('onItemLoadFail() - errorCode:' + errorCode);\n        }\n\n      });\n\n\n    }\n  ]);","angular.module('app.controllers')\n  .controller('loginCtrl', [\"$scope\", \"authService\", \"$mdToast\", \"$location\",\n    function ($scope, authService, $mdToast, $location) {\n      let toast = $mdToast.simple()\n        .hideDelay(3000);\n      let user = authService.get_user();\n      authService.logout();\n      $scope.conf = {\n        email: \"\",\n        password: \"\"\n      };\n      $scope.ConnectBtn = () => {\n        authService.login($scope.conf.email, $scope.conf.password).then(\n          () => {\n            $location.path('/home');\n          },\n          (err) => {\n            toast.textContent(err);\n            $mdToast.show(toast);\n          }\n        );\n      };\n\n    }\n  ]);"]}